{"version":3,"sources":["app/OpeningGraph.js","app/Analytics.js","app/Constants.js","app/OpeningTreeSerializer.js","pres/loader/Common.js","app/util.js","pres/loader/Filters.js","pres/loader/Actions.js","app/PGNReaderWorker.js","pres/StateManagement.js","app/OpeningBook.js","pres/loader/TimeControlLabels.js","pres/loader/FilterLabels.js","pres/loader/AdvancedFilters.js","app/PGNReader.js","app/Common.js","app/chess/RacingKingsChess.js","app/chess/CrazyhouseChess.js","app/chess/ChessLogic.js","app/OpeningManager.js","pres/Navigator.js","pres/GlobalHeader.js","pres/loader/Source.js","pres/loader/Dropzone.js","pres/loader/NotableChessGames.js","pres/loader/User.js","pres/loader/Variants.js","pres/loader/PGNLoader.js","pres/Settings.js","pres/ReportControls.js","pres/moves/MovesCommon.js","pres/moves/MovesSettings.js","pres/moves/MovesTable.js","pres/moves/ResultsTable.js","pres/moves/MovesList.js","pres/moves/BookMoves.js","pres/ControlsContainer.js","pres/SnackbarContentWrapper.js","pres/MainContainer.js","index.js","app/CookieManager.js","app/SitePolicy.js"],"names":["OpeningGraph","variant","this","graph","Graph","hasMoves","arrayEntries","pgnStats","parsedMoves","lastFen","playerColor","index","length","push","forEach","parsedMove","addMoveForFen","sourceFen","targetFen","moveSan","addGameResultOnFen","addStatsToRoot","fullFen","resultIndex","currNode","getNodeFromGraph","gameResults","targetNode","rootFen","details","hasData","blackWins","whiteWins","draws","totalOpponentElo","shortestGame","longestGame","lastPlayed","newDetails","getUpdatedMoveDetails","node","simplifiedFen","Number","isInteger","updateCalculatedValues","bestWin","bestWinGame","bestWinElo","getOpponentElo","worstLoss","worstLossGame","worstLossElo","lastPlayedGame","longestGameInfo","shortestGameInfo","count","fullSourceFen","fullTargetFen","move","resultObject","playedBy","moveCount","playedByMax","Math","max","book","fen","set","transform","Map","moves","fetch","map","black","white","san","averageElo","averageRating","get","addIfNull","nodes","GraphNode","currentMoveDetails","whiteWin","blackWin","draw","resultInt","result","Constants","opponentElo","currentBestWinGame","parseInt","currentWorstLossGame","currentLastPlayedGame","isDateMoreRecentThan","date","currentLongestGame","numberOfPlys","currentShortestGame","blackElo","whiteElo","Array","from","Object","entries","entry","chess","chessLogic","sloppy","targetNodeDetails","getDetailsForFen","orig","dest","to","level","levelFor","maxCount","trackPageView","ReactGA","pageview","window","location","pathname","trackEvent","category","action","label","value","event","initialize","TIME_CONTROL_ULTRA_BULLET","TIME_CONTROL_BULLET","TIME_CONTROL_BLITZ","TIME_CONTROL_RAPID","TIME_CONTROL_CLASSICAL","TIME_CONTROL_CORRESPONDENCE","TIME_CONTROL_DAILY","FILTER_NAME_RATED","FILTER_NAME_SELECTED_TIMEFRAME","FILTER_NAME_DOWNLOAD_LIMIT","FILTER_NAME_ELO_RANGE","SITE_LICHESS","SITE_CHESS_DOT_COM","SITE_PGN_FILE","SITE_EVENT_DB","SITE_PLAYER_DB","SITE_OPENING_TREE_FILE","SITE_ONLINE_TOURNAMENTS","MAX_DOWNLOAD_LIMIT","MAX_ELO_RATING","EVENT_CATEGORY_PGN_LOADER","EVENT_CATEGORY_MOVES_LIST","EVENT_CATEGORY_CONTROLS","EVENT_CATEGORY_NAVIGATOR","EVENT_CATEGORY_CHESSBOARD","EVENT_CATEGORY_MESSAGE_SHOWN","ROOT_FEN","RACING_KINGS_ROOT_FEN","PLAYER_COLOR_WHITE","PLAYER_COLOR_BLACK","LOADER_ANIMATION_DURATION_MS","OPENING_TREE_EMAIL","OPENNIG_TREE_REDDIT","OPENING_TREE_LICHESS","OPENING_TREE_CHESS_COM","OPENING_TREE_DISCORD","OPENING_TREE_FILE_CURRENT_VERSION","ERROR_ACTION_VISIT_OLD_SITE","ERROR_ACTION_NONE","LICHESS_NOT_LOGGED_IN","LICHESS_STATE_PENDING","LICHESS_LOGGED_IN","LICHESS_FAILED_FETCH","ERROR_SEVERITY_ERROR","ERROR_SEVERITY_SUCCESS","VARIANT_STANDARD","VARIANT_RACING_KINGS","VARIANT_THREE_CHECK","VARIANT_KING_OF_THE_HILL","VARIANT_CRAZYHOUSE","CHESS_COM_RULES_STANDARD","CHESS_COM_RULES_THREE_CHECK","CHESS_COM_RULES_KING_OF_THE_HILL","CHESS_COM_RULES_CRAZYHOUSE","LICHESS_PERF_RACING_KINGS","LICHESS_PERF_THREE_CHECK","LICHESS_PERF_KING_OF_THE_HILL","LICHESS_PERF_CRAZYHOUSE","LICHESS_PERF_STANDARD","LICHESS_HEADER_RACING_KINGS","LICHESS_HEADER_THREE_CHECK","LICHESS_HEADER_KING_OF_THE_HILL","LICHESS_HEADER_STANDARD","LICHESS_HEADER_CRAZYHOUSE","OPENING_BOOK_TYPE_OFF","OPENING_BOOK_TYPE_MASTERS","OPENING_BOOK_TYPE_LICHESS","ALL_BOOK_RATINGS","serializeOpeningTree","treeData","filename","callback","chunkedArray","chunks","chunk","header","arraySizes","arrays","arr","array","prototype","apply","chunkSize","startIndex","i","chunkIndex","slice","chunkArray","deflatedChunks","packControlWord","remainingChunks","hasError","zlib","deflate","Buffer","JSON","stringify","error","data","byteLength","saveAs","Blob","type","deserializeOpeningTree","file","reader","FileReader","onload","evt","target","version","unpackControlWord","numChunks","handleInflate","console","log","parse","e","sortedChunks","sort","a","b","flattenedChunks","el","flat","size","reconstructObjectFromChunks","inflate","getInflatedChunks","onerror","name","message","readAsArrayBuffer","control","view","DataView","getUint16","getUint32","buffer","ArrayBuffer","setUint16","setUint32","Accordion","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MUIAccordion","getNumberIcon","n","alt","className","src","height","advancedFilters","state","createSubObjectWithProperties","copyText","elementId","document","getElementById","select","setSelectionRange","execCommand","mainObject","properties","subObject","property","fenComponents","split","getTimeControlsArray","site","timeControlState","selected","Common","filter","timeControl","monthLabels","getTimeframeSteps","steps","year","startYear","currentYear","Date","getFullYear","currentMonth","getMonth","toLongLabel","fromLongLabel","month","simplifyCount","toFixed","round","getSelectedTimeFrameData","timeframe","timeframeSteps","fromIndex","toIndex","fromTimeframe","toTimeframe","currentDate","fromMonth","fromYear","fromTimeStamp","getTimeStampInfoFor","toYear","toMonth","toTimeStamp","minOrMax","getTime","getDate","getDaysInMonth","getPerformanceDetails","totalGames","averageOpponentElo","playerWins","playerLosses","scorePercentage","ratingChange","performanceRating","results","score","abs","than","User","props","isAdvancedFiltersOpen","assign","defaultAdvancedFilters","rated","setState","newState","SitePolicy","setImmediate","setFilters","bind","checked","newValue","colorError","filtersChange","isDisabled","areAdvancedFiltersApplied","newProps","key","deepEqual","playerName","selectedNotablePlayer","expandedPanel","TransitionComponent","MuiCollapse","TransitionProps","timeout","onChange","handleExpansionChange","disabled","expandIcon","getSummary","component","playerColorChange","color","onClick","toggleState","icon","faCaretUp","faCaretDown","isOpen","toggleRated","handleTimeControlChange","handleTimeframeChange","handleEloRangeChange","handleDownloadLimitChange","React","Component","Actions","unload","pgnReader","stopDownloading","isGamesSubsectionOpen","exportingInProgress","streamsaver","mitm","encoder","TextEncoder","addEventListener","removeEventListener","importOpeningTree","files","err","subMesage","showError","success","importOpeningTreeObject","showInfo","exportOpeningTree","exportOpeningTreeObject","info","fileWriter","close","game","headers","join","moveObject","pendingDownloads","write","encode","getPgnString","then","abortDownloading","shouldDownloadToFile","fileStream","createWriteStream","selectedNotableEvent","getWriter","PGNReader","readerInstance","fetchPGNFromSite","selectedOnlineTournament","proxy","notify","downloadResponse","getTokens","lichess","cookieManager","getLichessAccessToken","readPgn","gamesProcessed","clear","loadedSite","setDownloading","importTreeClicked","startIcon","disableElevation","downloadDisabledReason","isDownloading","load","download","placement","title","exportTreeClicked","stopDownloadingAction","switchToMovesTab","faList","openingTreeLoadActions","regularActions","mainComponent","in","wrap","Worker","turnColor","turn","settings","brushes","againstBrushes","forBrushes","highlightArrow","highlightedMove","calcMovable","dests","SQUARES","s","ms","square","verbose","m","free","orientation","onMove","sanOrOrig","moveObj","promotion","lastMove","onMoveAction","navigateTo","previousMove","updateProcessedGames","downloadLimit","parsedGame","totalGamesProcessed","openingGraph","addPGN","latestFen","downloadingGames","moveToShape","brush","autoShapes","shapes","concat","fillArray","getPlayerMoves","movesForFen","gameResultsForFen","len","reset","settingsChange","settingsToPersist","CookieManager","setSettingsCookie","clearBookNodes","trackingEvent","subMessage","severity","errorActionText","errorAction","url","messageSeverity","open","toggleFeedback","eventName","trackingLabel","closeError","diagnosticsOpen","feedbackOpen","diagnosticsDataOpen","val","toggleDiagnosticsData","copyDiagnostics","importGameState","importState","getChessboardWidth","nearestMultipleOf8","innerWidth","min","innerHeight","getDiagnosticsValue","navigator","userAgent","getRedditLink","getSubject","getBody","getEmailLink","variantChange","newVariant","getBookMoves","getBookNode","movesSettings","openingBookType","forceFetchBookMoves","fetchBookMoves","addBookNode","update","mergePlayerAndBookMoves","playerMovesToShow","bookMovesToShow","bookMovesMap","movesToShow","createMap","bookMove","compareTo","bookScore","getCompareScores","userScore","values","getCompareToValues","addStateManagement","obj","bookSettings","ratings","openingBookRating","speeds","openingBookTimeControls","bookType","joinParams","request","response","body","paramName","r","timeClasses","selectedTimeControls","unselectedTimeControls","includesAll","subArray","every","v","includes","getTimeControlLabel","timeClass","lichessTimeControlLabel","AdvancedFilters","currentlyOpenAdvancedFilter","timeframeMarks","downloadLimitMarks","eloRangeMarks","filterName","subSectionComponent","setCurrentlyOpenAdvancedFilter","Collapse","getTimeControlFilters","getTimeFrameFilters","selectedEloRange","getEloRangeFilters","getDownloadLimitFilters","Slider","valueLabelDisplay","valueLabelFormat","step","marks","firstRow","middleRow","lastRow","colWidth","FormControl","FormGroup","Container","getTimeControlFilterRow","controls","firstColumnWidth","position","clsName","Row","Col","sm","FormControlLabel","Checkbox","changeCallback","children","getFilters","module","exports","LICHESS_TIME_CONTROLS","CHESS_DOT_COM_TIME_CONTROLS","TIME_CONTROL_LABELS","lichessPerf","DP_TABLE","RacingKingsChess","Chess","options","endsWith","substring","disambiguatedMove","problematicMove","potentialMoves","filteredMoves","potentialMove","charAt","disambiguate","CrazyhouseChess","locationOfAt","indexOf","piece","PAWN","toLowerCase","put","toggleTurn","tokens","OpeningManager","plys","currentIndex","pgn","ChessLogic","pgnAsList","moveForward","pgnList","pgnSoFar","pgnListSoFar","moveNumber","whitePly","blackPly","currMove","floor","moveTo","Navigator","openingManager","currentMove","keyHandler","keyCode","previous","next","addPly","device","moveBack","opening","ChessEcoCodes","openingCode","code","lg","Button","faStepBackward","faStepForward","GlobalHeader","useState","setIsOpen","modal","setModal","toggleModal","launch","Navbar","light","expand","width","NavbarBrand","href","NavbarToggler","navbar","Nav","NavItem","NavLink","faDiscord","faComments","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","Modal","toggle","ModalHeader","ListGroup","ListGroupItem","tag","ModalFooter","SOURCE_VARIANT_COMBINATION","Source","source","addNumber","faChessRook","Badge","siteChange","newSite","supportedSources","AccordionSummary","aria-controls","id","getSourceOption","AccordionDetails","RadioGroup","setSite","getSourceRadio","Divider","AccordionActions","continue","isSourceAvailable","Radio","Dropzone","newFiles","filesChange","acceptedFiles","dropzoneText","handleFileChange","dropzoneParagraphClass","showFileNames","useChipsForPreview","previewChipProps","dropzoneClass","filesLimit","maxFileSize","NotableChessGames","updateDetails","option","profile","imageUrl","subText","list","selectedDetail","placeholder","renderOption","renderDetails","tournamentUrl","selectedPlayer","selectedEvent","playerNameError","tournamentUrlError","player","nextProps","trim","startsWith","parsedUrl","URL","hostname","tournamentSite","pathComponents","tournamentId","tournamentType","validateInputDetailsSet","playerDetailsChange","finalPlayerName","setTimeout","getLichessCardBody","getPlayerNameInput","lichessLoginState","Card","Spinner","CardBody","CardTitle","faInfoCircle","faSync","refreshLichessStatus","faSignOutAlt","logoutOfLichess","launchLichessOauth","lichessLoginName","faCheck","CardText","rel","helperText","TextField","editPlayerName","onKeyUp","playerNameKeyUp","getOnlineTournamentCard","getOnlineTournamentInput","editTournamentUrl","setPlayerDetails","notablePlayers","notablePlayerChange","notableEvents","notableEventChange","getPgnFileSelection","getLichessSelection","getChessComSelection","getGoatDBEventSelection","getGoatDBSelection","getOpeningTreeSelection","getOnlineTournamentSelection","getInputsToShow","getVariantIcon","getVariantText","faFlagCheckered","faDiceThree","faMountain","faHouseDamage","faChessKing","style","getVariantOption","changeLink","setVariant","getVariantRadio","PGNLoader","selectedSite","URLSearchParams","search","fetchLichessLoginStatus","panel","newExpanded","timestamp","now","playername","openingTreeSave","saveVersion","setEntries","importCallback","gamesDetails","fetchGOATGames","auth","bearer","responseObj","username","deleteLichessAccessToken","filters","pgnUrl","Filters","SettingsView","srcElement","tagName","faRetweet","clearAction","faTrashAlt","resetAction","faFastBackward","analyse","faDesktop","ReportControls","stopPropagation","simplifiedView","multiline","rowsMax","inputProps","fontSize","spellCheck","copyFen","moveDetails","getFenField","switchToUserTab","faUser","performanceDetails","Table","eatClicks","isNaN","TableHead","TableRow","TableCell","TableBody","launchGame","faExternalLinkAlt","removeQuestionMarksFromDate","reportFooter","TableFooter","colSpan","playerDetails","elo","MovesSettings","mSettings","getTransformedBookType","isArray","newMovesSettings","cancel","ModalBody","getOpeningBookType","getOpeningBookRating","getOpeningBookTimeControls","getIndicatorSwitch","Switch","updateMoveSetting","mastersBookAvailable","ToggleButtonGroup","exclusive","aria-label","ToggleButton","MovesTable","openPerformanceIndex","moveSettingsOpen","prevProps","prevState","clickedEventName","moveIndex","compareToClicked","percent","stepPositions","getIndicator","constructAlt","compareToAlt","compareClicked","altTitle","click","transition","accomplished","performancePopoverOpen","openMove","Popover","trigger","namespace","togglePerformancePopover","getTranspositionWarningLevel","getInfoIcon","targetCount","difference","faWrench","toggleMovesSettings","updateSettings","getSingleItemRow","getMultiItemRow","tableFooter","highlightMove","onMouseOver","highlightArrowFn","onMouseOut","getPopover","openingBookScoreIndicator","compareScores","Progress","multi","bar","percentage","getProgressLabel","openingBookWinsIndicator","compareProgress","faExclamationTriangle","total","showAsPercentage","sampleResultWhite","sampleResultBlack","sampleResult","ResultsTable","whitePlayer","blackPlayer","MovesList","playerMoves","resultsTable","movesTable","switchToBookTab","BookMove","bookMoves","offCard","enableBook","actionText","actionIcon","ControlsContainer","activeTab","activeGame","tab","highlightPlayerMove","highlightBookMove","tabs","classnames","active","faBook","faChartBar","faCog","TabContent","TabPane","tabId","bookResults","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","iconVariant","opacity","marginRight","spacing","alignItems","classes","onClose","showReportButton","other","Icon","SnackbarContent","clsx","aria-describedby","IconButton","MainContainer","urlVariant","selectedVariant","resize","getMovesSettingsFromCookie","chessboardWidth","handleResize","getSettingsCookie","lastMoveArray","snackBarOpen","order","xs","movable","drawable","enabled","visible","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ReactDOM","render","Cookies","remove","path","domain","settingsCookie","isAdvancedFiltersEnabled","isFilterPanelEnabled","treeSaveDisabledReason","exportFileName","extension"],"mappings":"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","file":"static/js/main.f8fdf0cd.chunk.js","sourcesContent":["import {simplifiedFen, isDateMoreRecentThan} from './util'\nimport * as Constants from './Constants'\nimport {chessLogic, rootFen} from '../app/chess/ChessLogic'\n\nexport default class OpeningGraph {\n    constructor(variant) {\n        this.graph=new Graph()\n        this.hasMoves = false\n        this.variant = variant\n    }\n    setEntries(arrayEntries, pgnStats){\n        this.graph=new Graph(arrayEntries, pgnStats)\n        this.hasMoves = true\n    }\n\n    clear() {\n        this.graph = new Graph()\n        this.hasMoves = false\n    }\n\n    addPGN(pgnStats, parsedMoves, lastFen, playerColor) {\n        pgnStats.index = this.graph.pgnStats.length\n        this.graph.pgnStats.push(pgnStats)\n        this.graph.playerColor = playerColor\n        this.hasMoves = true\n        parsedMoves.forEach(parsedMove => {\n            this.addMoveForFen(parsedMove.sourceFen, parsedMove.targetFen, parsedMove.moveSan, pgnStats)\n        })\n        this.addGameResultOnFen(lastFen, pgnStats.index)\n        this.addStatsToRoot(pgnStats, this.variant)\n    }\n\n    addGameResultOnFen(fullFen, resultIndex) {\n        var currNode = this.getNodeFromGraph(fullFen, true)\n        if(!currNode.gameResults) {\n            currNode.gameResults = []\n        }\n        currNode.gameResults.push(resultIndex)\n    }\n    addStatsToRoot(pgnStats, variant) {\n        var targetNode = this.getNodeFromGraph(rootFen(variant), true)\n        if(!targetNode.details) {\n            targetNode.details = emptyDetails()\n        }\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, pgnStats)\n        targetNode.details = newDetails\n    }\n\n    getDetailsForFen(fullFen) {\n        let node = this.getNodeFromGraph(simplifiedFen(fullFen), false)\n        let details = node && node.details\n        if (Number.isInteger(details)) {\n            details = this.getUpdatedMoveDetails(emptyDetails(), this.graph.pgnStats[details])\n        } else if(!details) {\n            return emptyDetails()\n        }\n        details = this.updateCalculatedValues(details)   \n        return details\n    }\n\n    updateCalculatedValues(details) {\n        if(Number.isInteger(details.bestWin)) {\n            details.bestWinGame = this.graph.pgnStats[details.bestWin]\n            details.bestWinElo = this.getOpponentElo(this.graph.playerColor,details.bestWinGame)\n        }\n        if(Number.isInteger(details.worstLoss)) {\n            details.worstLossGame = this.graph.pgnStats[details.worstLoss]\n            details.worstLossElo = this.getOpponentElo(this.graph.playerColor,details.worstLossGame)\n        }\n        if(Number.isInteger(details.lastPlayed)) {\n            details.lastPlayedGame = this.graph.pgnStats[details.lastPlayed]\n        }\n        if(Number.isInteger(details.longestGame)) {\n            details.longestGameInfo = this.graph.pgnStats[details.longestGame]\n        }\n        if(Number.isInteger(details.shortestGame)) {\n            details.shortestGameInfo = this.graph.pgnStats[details.shortestGame]\n        }\n        details.count = details.whiteWins+details.blackWins+details.draws\n        return details\n\n    }\n\n    addMoveForFen(fullSourceFen, fullTargetFen, move, resultObject) {\n        var targetNode = this.getNodeFromGraph(fullTargetFen, true)\n        let newDetails = this.getUpdatedMoveDetails(targetNode.details, resultObject)\n        targetNode.details = newDetails\n\n        var currNode = this.getNodeFromGraph(fullSourceFen, true)\n        if(!currNode.playedBy) {\n            currNode.playedBy = {}\n        }\n        let moveCount = currNode.playedBy[move]\n        if(!moveCount) {\n            moveCount = 0\n        }\n        moveCount = moveCount+1\n        currNode.playedBy[move] = moveCount\n        currNode.playedByMax = Math.max(currNode.playedByMax, moveCount)\n    }\n\n    addBookNode(fullFen, book) {\n        let fen = simplifiedFen(fullFen)\n        this.graph.book.set(fen, this.transform(book))\n    }\n    clearBookNodes(){\n        this.graph.book = new Map()\n    }\n    transform(book) {\n        if(!book || !book.moves) {\n            return book\n        }\n        return {\n            fetch:\"success\",\n            moves:book.moves.map((move)=>{\n                let count = move.black+move.white+move.draws\n                return {\n                    san:move.san,\n                    details:{\n                        hasData:true,\n                        blackWins:move.black,\n                        whiteWins:move.white,\n                        draws:move.draws,\n                        count:count,\n                        averageElo:move.averageRating\n                    },\n                    moveCount:count\n                }\n            })\n        }\n    }\n    getBookNode(fullFen) {\n        let fen = simplifiedFen(fullFen)\n        return this.graph.book.get(fen)\n    }\n\n    getNodeFromGraph(fullFen, addIfNull) {\n        let fen = simplifiedFen(fullFen)\n        var currNode = this.graph.nodes.get(fen)\n        if(!currNode && addIfNull) {\n            currNode = new GraphNode()\n            currNode.fen = fen\n            this.graph.nodes.set(fen, currNode)\n        }\n        return currNode\n    }\n\n    getUpdatedMoveDetails(currentMoveDetails, resultObject) {\n        if(Number.isInteger(currentMoveDetails)) {\n            // if this is the second stat object being added\n            // calculate the first move details and then merge it with the second one\n            currentMoveDetails = this.getUpdatedMoveDetails(emptyDetails(),\n                            this.graph.pgnStats[currentMoveDetails])\n        } else if(!currentMoveDetails) {\n            // if this is the first stat being added to this node,\n            // just write the index to calculate the stats later\n            return resultObject.index\n        }\n        \n        let whiteWin = 0, blackWin = 0, draw = 0, resultInt = 0;\n        let playerColor = this.graph.playerColor\n        if(resultObject.result === '1-0') {\n            whiteWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_WHITE? 1 : -1\n        } else if (resultObject.result === '0-1') {\n            blackWin = 1\n            resultInt = playerColor === Constants.PLAYER_COLOR_BLACK? 1 : -1\n        } else {\n            draw = 1\n        }\n\n        let opponentElo = this.getOpponentElo(playerColor, resultObject)\n        if(resultInt === 1) {\n            let currentBestWinGame = null\n            if(Number.isInteger(currentMoveDetails.bestWin)) {\n                currentBestWinGame = this.graph.pgnStats[currentMoveDetails.bestWin]\n            }\n            if(!currentBestWinGame || parseInt(opponentElo)>parseInt(this.getOpponentElo(playerColor, currentBestWinGame))) {\n                currentMoveDetails.bestWin = resultObject.index\n            }\n        }\n        if(resultInt === -1) {\n            let currentWorstLossGame = null\n            if(Number.isInteger(currentMoveDetails.worstLoss)) {\n                currentWorstLossGame = this.graph.pgnStats[currentMoveDetails.worstLoss]\n            }\n            if(!currentWorstLossGame || parseInt(opponentElo)<parseInt(this.getOpponentElo(playerColor, currentWorstLossGame))) {\n                currentMoveDetails.worstLoss = resultObject.index\n            }\n        }\n        let currentLastPlayedGame = null\n        if(Number.isInteger(currentMoveDetails.lastPlayed)) {\n            currentLastPlayedGame = this.graph.pgnStats[currentMoveDetails.lastPlayed]\n        }\n        if(!currentLastPlayedGame || \n            isDateMoreRecentThan(resultObject.date, currentLastPlayedGame.date)) {\n                currentMoveDetails.lastPlayed = resultObject.index\n        }\n        let currentLongestGame = null\n        if(Number.isInteger(currentMoveDetails.longestGame)) {\n            currentLongestGame = this.graph.pgnStats[currentMoveDetails.longestGame]\n        }\n        if(!currentLongestGame || \n            resultObject.numberOfPlys > currentLongestGame.numberOfPlys) {\n                currentMoveDetails.longestGame = resultObject.index\n        }\n\n        let currentShortestGame = null\n        if(Number.isInteger(currentMoveDetails.shortestGame)) {\n            currentShortestGame = this.graph.pgnStats[currentMoveDetails.shortestGame]\n        }\n        if(!currentShortestGame || \n            resultObject.numberOfPlys < currentShortestGame.numberOfPlys) {\n                currentMoveDetails.shortestGame = resultObject.index\n        }\n\n\n        currentMoveDetails.blackWins += blackWin\n        currentMoveDetails.whiteWins += whiteWin\n        currentMoveDetails.draws += draw\n        currentMoveDetails.totalOpponentElo += parseInt(opponentElo)\n        currentMoveDetails.hasData = true\n        return currentMoveDetails\n    }\n\n    getOpponentElo(playerColor, resultObject) {\n        if(playerColor === Constants.PLAYER_COLOR_WHITE) {\n            return resultObject.blackElo\n        }\n        return resultObject.whiteElo\n    }\n\n    gameResultsForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode && currNode.gameResults) {\n            return currNode.gameResults.map((index)=>this.graph.pgnStats[index])\n        }\n        return null\n    }\n    movesForFen(fullFen) {\n        let fen = simplifiedFen(fullFen)\n\n        var currNode = this.graph.nodes.get(fen)\n        if(currNode && currNode.playedBy) {\n            return Array.from(Object.entries(currNode.playedBy)).map((entry)=> {\n                let chess = chessLogic(this.variant, fullFen)\n                let move = chess.move(entry[0], {sloppy: true})\n                let targetNodeDetails = this.getDetailsForFen(chess.fen())\n                return {\n                    orig:move.from,\n                    dest:move.to,\n                    level:this.levelFor(entry[1], currNode.playedByMax),\n                    san:move.san,\n                    details:targetNodeDetails,\n                    moveCount:entry[1]\n                }\n            })\n        }        \n        return null\n    }\n\n    levelFor(moveCount, maxCount){\n        if(maxCount <= 0 ||moveCount/maxCount > 0.8) {\n            return 3\n        }\n        if(moveCount/maxCount>0.3) {\n            return 2\n        }\n        return 1\n    }\n\n}\n\n\nclass Graph {\n    constructor(arrayEntries, pgnStats){\n        this.nodes = new Map()\n        this.book = new Map()\n        this.pgnStats = []\n        this.playerColor = ''\n        if(arrayEntries) {\n            arrayEntries.forEach((entry)=> {\n                this.nodes.set(entry[0],entry[1])\n            })\n        }\n        if(pgnStats) {\n            this.pgnStats = pgnStats\n        }\n    }\n}\n\nclass GraphNode {\n            playedByMax = 0 // used to keep track of how many times the most frequent move is played for ease of calculation later\n            //playedBy = {}\n            //gameResults = []\n}\n\nfunction emptyDetails() {\n    return {\n        hasData:false,\n//        count: 0,\n        blackWins: 0,\n        whiteWins: 0,\n        draws: 0,\n        totalOpponentElo: 0,\n        shortestGame:null,\n        longestGame:null,\n//        bestWin:null,\n//        bestWinGame:null,\n//        worstLoss:null,\n//        worstLossGame:null,\n        lastPlayed:null\n//        lastPlayedGame:null\n    }\n}\n","import ReactGA from 'react-ga';\nReactGA.initialize('UA-159149755-1');\n\nexport function trackPageView() {\n    ReactGA.pageview(window.location.pathname);\n}\n\nexport function trackEvent(category, action, label, value) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n        value: value\n      })\n}\n\n","export const TIME_CONTROL_ULTRA_BULLET = \"ultraBullet\"\nexport const TIME_CONTROL_BULLET = \"bullet\"\nexport const TIME_CONTROL_BLITZ = \"blitz\"\nexport const TIME_CONTROL_RAPID = \"rapid\"\nexport const TIME_CONTROL_CLASSICAL = \"classical\"\nexport const TIME_CONTROL_CORRESPONDENCE = \"correspondence\"\nexport const TIME_CONTROL_DAILY = \"daily\"\nexport const FILTER_NAME_RATED = \"rated\"\nexport const FILTER_NAME_SELECTED_TIMEFRAME = \"selectedTimeframe\"\nexport const FILTER_NAME_DOWNLOAD_LIMIT = \"downloadLimit\"\nexport const FILTER_NAME_ELO_RANGE = \"eloRange\"\n\nexport const SITE_LICHESS = \"lichess\"\nexport const SITE_CHESS_DOT_COM = \"chesscom\"\nexport const SITE_PGN_FILE = \"pgnfile\"\nexport const SITE_EVENT_DB = \"eventdb\"\nexport const SITE_PLAYER_DB = \"playerdb\"\nexport const SITE_OPENING_TREE_FILE = \"opntfile\"\nexport const SITE_ONLINE_TOURNAMENTS = \"tournament\"\n\nexport const MAX_DOWNLOAD_LIMIT = 2000\nexport const MAX_ELO_RATING = 3000\n\nexport const EVENT_CATEGORY_PGN_LOADER = \"loader\"\nexport const EVENT_CATEGORY_MOVES_LIST = \"moves\"\nexport const EVENT_CATEGORY_CONTROLS = \"controls\"\nexport const EVENT_CATEGORY_NAVIGATOR = \"navigator\"\nexport const EVENT_CATEGORY_CHESSBOARD = \"chessboard\"\nexport const EVENT_CATEGORY_ERROR = \"error\"\nexport const EVENT_CATEGORY_MESSAGE_SHOWN = \"message\"\n\nexport const ROOT_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\nexport const RACING_KINGS_ROOT_FEN=\"8/8/8/8/8/8/krbnNBRK/qrbnNBRQ w - - 0 1\"\n\nexport const PLAYER_COLOR_WHITE = 'white'\nexport const PLAYER_COLOR_BLACK = 'black'\n\nexport const LOADER_ANIMATION_DURATION_MS = 500\n\nexport const OPENING_TREE_EMAIL = 'feedback@openingtree.com'\nexport const OPENNIG_TREE_REDDIT = 'opening_tree'\nexport const OPENING_TREE_LICHESS = 'vannooz'\nexport const OPENING_TREE_CHESS_COM = 'vannooz'\nexport const OPENING_TREE_DISCORD = 'https://discord.gg/hCwKkN8'\n\nexport const OPENING_TREE_FILE_CURRENT_VERSION = 2\n\nexport const ERROR_ACTION_REPORT = 'report'\nexport const ERROR_ACTION_VISIT_OLD_SITE = 'visitOld'\nexport const ERROR_ACTION_NONE = 'noAction'\nexport const LICHESS_NOT_LOGGED_IN = 0;\nexport const LICHESS_STATE_PENDING = 1;\nexport const LICHESS_LOGGED_IN = 2;\nexport const LICHESS_FAILED_FETCH = 3;\n\nexport const ERROR_SEVERITY_ERROR = \"error\";\nexport const ERROR_SEVERITY_WARNING = \"warning\";\nexport const ERROR_SEVERITY_SUCCESS = \"success\";\n\nexport const VARIANT_STANDARD = \"standard\";\nexport const VARIANT_RACING_KINGS = \"racingkings\";\nexport const VARIANT_THREE_CHECK = \"threecheck\";\nexport const VARIANT_KING_OF_THE_HILL = \"kingofthehill\";\nexport const VARIANT_CRAZYHOUSE = \"crazyhouse\";\n\nexport const CHESS_COM_RULES_STANDARD = \"chess\";\nexport const CHESS_COM_RULES_THREE_CHECK = \"threeCheck\";\nexport const CHESS_COM_RULES_KING_OF_THE_HILL = \"kingofthehill\";\nexport const CHESS_COM_RULES_CRAZYHOUSE = \"crazyhouse\";\n\nexport const LICHESS_PERF_RACING_KINGS = \"racingKings\"\nexport const LICHESS_PERF_THREE_CHECK = \"threeCheck\"\nexport const LICHESS_PERF_KING_OF_THE_HILL = \"kingOfTheHill\"\nexport const LICHESS_PERF_CRAZYHOUSE = \"crazyhouse\"\nexport const LICHESS_PERF_STANDARD = \"standard\"\n\nexport const LICHESS_HEADER_RACING_KINGS = \"Racing Kings\"\nexport const LICHESS_HEADER_THREE_CHECK = \"Three-check\"\nexport const LICHESS_HEADER_KING_OF_THE_HILL = \"King of the Hill\"\nexport const LICHESS_HEADER_STANDARD = \"Standard\"\nexport const LICHESS_HEADER_CRAZYHOUSE = \"Crazyhouse\"\n\nexport const OPENING_BOOK_TYPE_OFF = 'off'\nexport const OPENING_BOOK_TYPE_MASTERS = 'master'\nexport const OPENING_BOOK_TYPE_LICHESS = 'lichess'\n\nexport const ALL_BOOK_RATINGS = ['1600','1800','2000','2200','2500']","import zlib from 'zlib'\nimport {Buffer} from 'buffer'\nimport { saveAs } from 'file-saver';\n\nexport function serializeOpeningTree(treeData, filename, callback) {\n    let chunkedArray = chunk(treeData)\n    let deflatedChunks = []\n    //push version number 1 for later backward compatibility\n    deflatedChunks.push(packControlWord(0x1))\n    deflatedChunks.push(packControlWord(chunkedArray.length))\n    let remainingChunks = chunkedArray.length\n    let hasError = false;\n    chunkedArray.forEach((chunk)=>{\n        zlib.deflate(\n            new Buffer(JSON.stringify(chunk)), \n            (error,data)=>{\n                remainingChunks--\n                if(error) {\n                    hasError = true\n                }\n                deflatedChunks.push(packControlWord(data.byteLength))\n                deflatedChunks.push(data)\n                if(remainingChunks<=0) {\n                    if(hasError) {\n                        callback(\"Could not save file\")\n                        return\n                    }\n                    saveAs(new Blob(deflatedChunks, {type: \"application/octet-stream\"}), filename)\n                    callback(null, `Saved opening tree to file ${filename}`)\n                }\n            });\n        })\n}\n\nexport function deserializeOpeningTree(file, callback) {\n    let reader = new FileReader()\n    reader.onload = function(evt) {\n        let data = evt.target.result\n        let index = 0\n        let version = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(version !== 0x1) {\n            callback(\"File is not an openingtree save file.\", null,\"Are you loading the correct file?\")\n            return\n        }\n        let numChunks = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        if(!numChunks) {\n            callback(\"Input file not in correct format\", null)\n            return\n        }\n        getInflatedChunks(data, index, numChunks, callback)\n    };\n    reader.onerror = function(e) {\n        callback(\"Failed to read openingtree file\", null, `${e.target.error.name}:${e.target.error.message}`)\n    }\n    reader.readAsArrayBuffer(file)\n}\n\nfunction getInflatedChunks(data, startIndex, numChunks, callback) {\n    let index = startIndex\n    let deflatedChunks = []\n    let remainingChunks = numChunks\n    let hasError=false\n    let handleInflate = (error, data)=> {\n        remainingChunks--\n        if(error) {\n            console.log(error)\n            hasError=true\n        }\n        try {\n            deflatedChunks.push(JSON.parse(data))\n        } catch (e) {\n            console.log(e)\n            hasError=true\n        }\n        if(remainingChunks===0) {\n            if(hasError) {\n                callback(\"Input file seems corrupted\", null)\n            }\n            \n            callback(null, reconstructObjectFromChunks(deflatedChunks))\n        }\n        \n    }\n    while(numChunks>0) {\n        let chunkSize = unpackControlWord(data.slice(index,index+8))\n        index = index + 8\n        zlib.inflate(\n            Buffer.from(data,index,chunkSize), handleInflate)\n        index = index + chunkSize\n        numChunks--\n    }\n}\n\nfunction reconstructObjectFromChunks(deflatedChunks) {\n    let sortedChunks = deflatedChunks.sort((a,b)=>a.index-b.index)\n    let flattenedChunks = sortedChunks.slice(1).map(el=>el.chunk).flat()\n    let header = sortedChunks[0]\n    let arrays = []\n    let index = 0\n    let arraySizes = header.arraySizes || [flattenedChunks.length]\n    arraySizes.forEach((size)=>{\n        arrays.push(flattenedChunks.slice(index,index+size))\n        index+=size\n    })\n    return {\n        header:header.chunk,\n        arrays:arrays\n    }\n}\n\nfunction unpackControlWord(control) {\n    let view = new DataView(control)\n    if(view.getUint16(0)!==0x1337 || view.getUint16(6)!==0xC0D3) {\n        return null\n    }\n    return view.getUint32(2)\n}\n\nfunction packControlWord(control) {\n    var buffer = new ArrayBuffer(8); \n    var view = new DataView(buffer); \n    view.setUint16(0, 0x1337)\n    view.setUint32(2, control>>>0)\n    view.setUint16(6, 0xC0D3)\n    return buffer\n}\n\nfunction chunk(treeData) {\n    let chunk1 = {chunk:treeData.header, index:0, \n        arraySizes:treeData.arrays.map(arr=>arr.length)}\n    let chunks = [chunk1]\n    treeData.arrays.forEach((array)=>{\n        Array.prototype.push.apply(chunks, chunkArray(array, 1000, chunks.length));\n    })\n    return chunks\n}\n\nfunction chunkArray(array, chunkSize, startIndex) {\n    let chunkedArray=[]\n    \n    for (let i=0, chunkIndex=1; i<array.length; i+=chunkSize, chunkIndex++) {\n        chunkedArray.push({chunk:array.slice(i,i+chunkSize), index:startIndex+chunkIndex});\n    }\n    return chunkedArray\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport MUIAccordion from '@material-ui/core/Accordion';\nimport React from 'react'\nimport { createSubObjectWithProperties } from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MUIAccordion);\n\nexport function getNumberIcon(n) {\n    return <img alt={`step ${n}`} className = 'lowOpacity styledNumbers' src={`/images/styled-${n}.png`} height={24}/>\n}\n\nexport function advancedFilters(state) {\n    return createSubObjectWithProperties(state,\n        [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n        Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n        Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n        Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n        Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n        Constants.FILTER_NAME_ELO_RANGE])\n}\n\nexport function copyText(elementId) {\n    /* Get the text field */\n    var copyText = document.getElementById(elementId);\n    try {\n        /* Select the text field */\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n        return true\n    } catch(e) {\n        return false\n    }\n}","import * as Constants from '../app/Constants'\nimport * as Common from '../app/Common'\n\nexport function createSubObjectWithProperties(mainObject, properties) {\n    let subObject = {}\n    properties.forEach(property => {\n        subObject[property] = mainObject[property]\n    });\n    return subObject\n}\nexport function simplifiedFen(fen) {\n    let fenComponents = fen.split(' ')\n    if(fenComponents.length <=4) {\n        return fen\n    }\n    //exclude move and halfMove components\n    return `${fenComponents[0]} ${fenComponents[1]} ${fenComponents[2]}`\n}\n\nexport function getTimeControlsArray(site,timeControlState, selected) {\n    let allTimeControls = site === Constants.SITE_LICHESS ? \n        Common.LICHESS_TIME_CONTROLS : Common.CHESS_DOT_COM_TIME_CONTROLS\n    return allTimeControls.filter((timeControl)=>!!timeControlState[timeControl] === selected)\n}\nlet monthLabels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n]\nexport function getTimeframeSteps() {\n    let steps = [{\n        year:2007,\n        value:0\n    }]\n    let value = 1;\n    let startYear = 2010\n    let currentYear = new Date().getFullYear()\n    let currentMonth = new Date().getMonth()\n    while(startYear < currentYear-1) {\n        steps.push({\n            toLongLabel:`${monthLabels[11]} ${startYear}`,\n            fromLongLabel:`${monthLabels[0]} ${startYear}`,\n            year:startYear,\n            value:value\n        })\n        startYear++\n        value++\n    }\n    for(let i=11;i>0;i--) {\n\n        let month = (currentMonth+12-i)%12\n        let year = month<currentMonth?currentYear:currentYear-1\n        steps.push({\n            fromLongLabel: `${monthLabels[month]} ${year}`,\n            toLongLabel: `${monthLabels[month]} ${year}`,\n            month:month,\n            year: year,\n            value:value\n        })\n        value++\n    }\n    steps.push({\n        month:12,\n        year: currentYear,\n        value:value\n    })\n    return steps\n}\n\n\nexport function simplifyCount(count){\n    if(count>=1000000){\n        return `${(count/1000000).toFixed(1)}M`\n    }        \n    if(count>=10000){\n        return `${Math.round(count/1000)}k`\n    }\n\n    return count\n}\n\nexport function getSelectedTimeFrameData(timeframe, timeframeSteps) {\n    let fromIndex = timeframe[0]\n    let toIndex = timeframe[1]\n    let fromTimeframe = timeframeSteps[fromIndex]\n    let toTimeframe = timeframeSteps[toIndex]\n    \n    if(fromIndex === timeframeSteps.length-1 && toIndex === timeframeSteps.length-1) {\n        let currentDate = new Date()\n        return {\n            label:\"Current month\",\n            fromMonth:currentDate.getMonth(),\n            fromYear:currentDate.getFullYear(),\n            fromTimeStamp:getTimeStampInfoFor(currentDate.getMonth(), currentDate.getFullYear(), \"min\")\n        }\n    }\n    if(fromIndex === 0 && toIndex === 0) {\n        return {label:\"Anytime\"}\n    }\n    if(fromIndex === 0 && toIndex === timeframeSteps.length-1) {\n        return {label:\"Anytime\"}\n    }\n    if(toIndex === timeframeSteps.length-1) {\n        let month = fromTimeframe.month ? fromTimeframe.month : 0\n        return {\n            label:`Since ${fromTimeframe.fromLongLabel}`,\n            fromYear: fromTimeframe.year,\n            fromMonth: month,\n            fromTimeStamp: getTimeStampInfoFor(month, fromTimeframe.year, \"min\")\n        }\n    }\n    if(fromIndex === 0) {\n        let month = toTimeframe.month ? toTimeframe.month : 11\n        return {\n            label:`Until ${toTimeframe.toLongLabel}`,\n            toYear: toTimeframe.year,\n            toMonth: month,\n            toTimeStamp: getTimeStampInfoFor(month, toTimeframe.year, \"max\")\n        }\n    }\n    let fromMonth = fromTimeframe.month ? fromTimeframe.month : 0\n    let toMonth = toTimeframe.month ? toTimeframe.month : 11\n    return {\n        label:`From ${fromTimeframe.fromLongLabel} to ${toTimeframe.toLongLabel}`,\n        fromYear: fromTimeframe.year,\n        fromMonth: fromMonth,\n        fromTimeStamp: getTimeStampInfoFor(fromMonth, fromTimeframe.year, \"min\"),\n        toYear: toTimeframe.year,\n        toMonth: toMonth,\n        toTimeStamp: getTimeStampInfoFor(toMonth, toTimeframe.year, \"max\")\n    }\n}\n\nfunction getTimeStampInfoFor(month, year, minOrMax) {\n    if(minOrMax === \"min\") {\n        return new Date(year, month).getTime()\n    } else {\n        return new Date(year,month,getDaysInMonth(year, month)).getTime()\n    }\n}\n\nfunction getDaysInMonth(year,month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getPerformanceDetails(totalOpponentElo, averageElo, white, draws, black, playerColor) {\n    let totalGames = white + draws + black\n    let averageOpponentElo = totalOpponentElo?Math.round(totalOpponentElo/totalGames):null\n    let playerWins = playerColor === Constants.PLAYER_COLOR_BLACK?black:white\n    let playerLosses = playerColor !== Constants.PLAYER_COLOR_BLACK?black:white\n    let score = playerWins+(draws/2)\n    let scorePercentage = score*100/totalGames\n    let ratingChange = Common.DP_TABLE[Math.round(scorePercentage)]\n    let performanceRating = null\n    if(averageOpponentElo) {\n        performanceRating = averageOpponentElo+ratingChange\n    }\n    return {\n        results:`+${simplifyCount(playerWins)}-${simplifyCount(playerLosses)}=${simplifyCount(draws)}`,\n        performanceRating:performanceRating,\n        averageOpponentElo: averageOpponentElo,// avg elo rating of opponents only\n        averageElo:averageElo, // avg elo rating of all players\n        score:`${Number.isInteger(scorePercentage)?scorePercentage:scorePercentage.toFixed(1)}% for ${playerColor === Constants.PLAYER_COLOR_BLACK?'black':'white'}`,\n        ratingChange:`${ratingChange===0?'':(ratingChange>0?'+':'-')}${Math.abs(ratingChange)}`\n    }\n}\n\nexport function isOpponentEloInSelectedRange(elo, range) {\n    if(range[1]===Constants.MAX_ELO_RATING) {\n        return elo>=range[0]\n    }\n    return elo<=range[1] && elo>=range[0]\n}\n\nexport function isDateMoreRecentThan(date, than) {\n    // give priority to game which has a date\n    if(!than) {\n        return false\n    }\n    if(!date) {\n        return true\n    } \n    return new Date(date)>new Date(than)\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { Collapse } from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport { faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\nimport AdvancedFilters from './AdvancedFilters'\nimport {advancedFilters} from './Common'\nimport MuiCollapse from '@material-ui/core/Collapse';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport { Radio, FormControlLabel, RadioGroup, FormHelperText, FormControl, FormLabel} from '@material-ui/core';\nimport deepEqual from 'deep-equal'\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerColor: this.props.playerColor,\n            isAdvancedFiltersOpen: false\n        }\n        this.timeframeSteps=this.props.timeframeSteps\n        Object.assign(this.state, this.props.advancedFilters)\n        this.defaultAdvancedFilters = this.props.advancedFilters\n    }\n\n    toggleRated() {\n        if (this.state.rated === 'all') {\n            this.setState({ rated: 'rated' })\n        } else if (this.state.rated === 'rated') {\n            this.setState({ rated: 'casual' })\n        } else {\n            this.setState({ rated: 'all' })\n        }\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", \"rated\")\n    }\n    toggleState(property) {\n        return () => {\n            let newState = {}\n            newState[property] = !this.state[property]\n            this.setState(newState)\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ToggleAdvancedFilters\", this.state.site)\n        }\n    }\n    playerColorChange(event) {\n        let playerColor = event.target.value\n        this.setState({ playerColor: playerColor })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ColorChange\", playerColor)\n        if(!SitePolicy.isAdvancedFiltersEnabled(this.props.site)) {\n            setImmediate(this.setFilters.bind(this))\n        }\n}\n    handleTimeControlChange(event) {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n    handleTimeframeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_SELECTED_TIMEFRAME]: newValue });\n    }\n    handleEloRangeChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_ELO_RANGE]: newValue });\n    }\n    handleDownloadLimitChange(event, newValue) {\n        this.setState({ [Constants.FILTER_NAME_DOWNLOAD_LIMIT]: newValue });\n    }\n\n    setFilters(){\n        if(!this.state.playerColor) {\n            this.setState({colorError:\"Please select a color\"})\n            return\n        }\n        this.setState({colorError:\"\", isAdvancedFiltersOpen:false})\n        this.props.filtersChange(this.state)\n    }\n    getSummary(isDisabled) {\n        if(this.props.playerColor && !isDisabled) {\n            return <span>\n                {getNumberIcon('done')}\n                Color: <b>{this.props.playerColor===Constants.PLAYER_COLOR_WHITE?\"White\":\"Black\"} </b>\n                {this.areAdvancedFiltersApplied()?<span className=\"smallText\">(Filters applied)</span>:null}</span>\n\n        }\n        return <span>{getNumberIcon(3)} Color and filters</span>\n    }\n    componentWillReceiveProps(newProps) {\n        this.setState({...newProps.advancedFilters, playerColor:newProps.playerColor})\n    }\n\n    areAdvancedFiltersApplied(){\n        for (let [key, value] of Object.entries(this.defaultAdvancedFilters)) {\n            if(this.props.advancedFilters[key]===value) {\n                continue\n            }\n            if(!deepEqual(this.props.advancedFilters[key], value)) {\n                return true\n            } \n        }\n        return false\n    }\n\n    \n    render(){\n        let isDisabled = !SitePolicy.isFilterPanelEnabled(this.props.site, this.props.playerName, this.props.selectedNotablePlayer)\n        return <Accordion expanded={this.props.expandedPanel === 'filters'}\n                    TransitionComponent={MuiCollapse}\n                    TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            onChange={this.props.handleExpansionChange}\n            disabled={isDisabled}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary(isDisabled)}</AccordionSummary>\n            <ExpansionPanelDetails>\n                <div className=\"pgnloaderfirstsection\">\n                <FormControl component=\"fieldset\" error={!!this.state.colorError}>\n                    <FormLabel component=\"legend\">Games where <b>{this.props.playerName}</b> is playing as:</FormLabel>\n                    <RadioGroup onChange={this.playerColorChange.bind(this)} value={this.state.playerColor}>\n                        <FormControlLabel className=\"whitelabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_WHITE} label={this.state.playerColor === Constants.PLAYER_COLOR_WHITE?<b>White</b>:\"White\"}/>\n                        <FormControlLabel className=\"blacklabel\" control={<Radio color=\"primary\" />} value={Constants.PLAYER_COLOR_BLACK} label={this.state.playerColor === Constants.PLAYER_COLOR_BLACK?<b>Black</b>:\"Black\"}/>\n                    </RadioGroup>\n                    <FormHelperText>{this.state.colorError}</FormHelperText>\n                </FormControl>\n                </div>\n                {SitePolicy.isAdvancedFiltersEnabled(this.props.site)?<div className=\"pgnloadersection\"><span className=\"linkStyle\" onClick={this.toggleState('isAdvancedFiltersOpen').bind(this)}>Advanced filters <FontAwesomeIcon icon={this.state.isAdvancedFiltersOpen ? faCaretUp : faCaretDown} /></span>\n                    <Collapse isOpen={this.state.isAdvancedFiltersOpen}>\n                            <AdvancedFilters\n                                site={this.props.site}\n                                toggleRated={this.toggleRated.bind(this)}\n                                handleTimeControlChange={this.handleTimeControlChange.bind(this)}\n                                handleTimeframeChange={this.handleTimeframeChange.bind(this)}\n                                handleEloRangeChange={this.handleEloRangeChange.bind(this)}\n                                timeframeSteps={this.timeframeSteps}\n                                handleDownloadLimitChange={this.handleDownloadLimitChange.bind(this)}\n                                advancedFilters={advancedFilters(this.state)}\n                            />\n                    </Collapse>\n                </div>:null}\n                </ExpansionPanelDetails>\n                <Divider />\n                <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setFilters.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></Accordion>\n    \n    }\n}","import React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport PGNReader from '../../app/PGNReaderWorker'\nimport { faList} from '@fortawesome/free-solid-svg-icons'\nimport GetApp from '@material-ui/icons/GetApp'\nimport Equalizer from '@material-ui/icons/Equalizer'\nimport Fade from '@material-ui/core/Fade'\nimport Save from '@material-ui/icons/Save';\nimport * as SitePolicy from '../../app/SitePolicy'\nimport {Tooltip} from '@material-ui/core'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport {serializeOpeningTree, deserializeOpeningTree} from '../../app/OpeningTreeSerializer'\nimport {proxy} from 'comlink'\nimport streamsaver from 'streamsaver'\nimport cookieManager from '../../app/CookieManager'\n\nexport default class Actions extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            isGamesSubsectionOpen : false,\n            exportingInProgress : false\n        }\n        streamsaver.mitm = \"download/download-mitm.html\"\n        this.encoder = new TextEncoder()\n\n    }\n    unload = () => {\n        if (this.pgnReader) {\n            this.pgnReader.stopDownloading()\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.unload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.unload);\n    }\n    importTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"LoadTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.importOpeningTree.bind(this))\n    }\n    importOpeningTree() {\n        deserializeOpeningTree(this.props.files[0], \n            (err,data, subMesage)=> {\n                if(err) {\n                    this.props.showError(err, null, subMesage)\n                    this.setState({exportingInProgress:false})\n                    return\n                }\n                let success = this.props.importOpeningTreeObject(data)\n                this.setState({exportingInProgress:false})\n                if(success) {\n                    this.props.showInfo(\"Successfuly loaded openingtree\")                \n                }\n            })\n    }\n    exportTreeClicked() {\n        this.setState({exportingInProgress:true})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"SaveTree\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n        setImmediate(this.exportOpeningTree.bind(this))\n    }\n    exportOpeningTree() {\n        serializeOpeningTree(this.props.exportOpeningTreeObject(), \n            SitePolicy.exportFileName(this.props.site, this.props.playerName, this.props.playerColor, null, \"tree\"), \n            (err, info) => {\n                if(err) {\n                    this.props.showError(err)                    \n                } else {\n                    this.props.showInfo(info)\n                }\n                this.setState({exportingInProgress:false})\n            })\n    }\n    abortDownloading() {\n        if(this.fileWriter) {\n            this.fileWriter.close()\n            this.fileWriter = null\n        }\n    }\n\n    getPgnString(game){\n        return `${Object.entries(game.headers).map(header=>`[${header[0]} \"${header[1]}\"]`).join(\"\\n\")}\n                \\n${game.moves.map((moveObject, index)=>{\n                    return `${index%2!==0?'':index/2+1+\".\"} ${moveObject.move}`\n                }).join(' ')} ${game.result}\\n\\n\\n`\n    }\n    downloadResponse(result, pendingDownloads) {\n        this.fileWriter.write(this.encoder.encode(result.map(game=>this.getPgnString(game)).join(\"\"))).then(()=>{\n            if(!pendingDownloads) {\n                this.abortDownloading()\n                return false\n            }\n        })\n        return true\n    }\n\n    readPgn(shouldDownloadToFile) {\n        if(shouldDownloadToFile) {\n            let fileStream =  streamsaver.createWriteStream(\n                SitePolicy.exportFileName(\n                    this.props.site, this.props.playerName, \n                    this.props.playerColor, this.props.selectedNotableEvent, \"pgn\"))\n            this.fileWriter = fileStream.getWriter()\n        }\n\n        new PGNReader(this.props.variant).then((readerInstance) => {\n            this.pgnReader = readerInstance\n            this.pgnReader.fetchPGNFromSite(this.props.playerName,\n                this.props.playerColor,\n                this.props.site,\n                this.props.selectedNotablePlayer,\n                this.props.selectedNotableEvent,\n                this.props.selectedOnlineTournament,\n                shouldDownloadToFile,\n                this.props.advancedFilters,\n                proxy(this.props.notify),\n                proxy(this.props.showError),\n                proxy(this.stopDownloading.bind(this)),\n                this.props.files,\n                proxy(this.downloadResponse.bind(this)),\n                this.getTokens())\n        })\n    }\n    \n    getTokens(){\n        return {\n            lichess:cookieManager.getLichessAccessToken()\n        }\n    }\n    download() {\n        this.readPgn(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Download\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n\n    }\n\n    getPlayerName() {\n        if(this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.props.selectedNotablePlayer.name\n        }\n        return this.props.playerName\n    }\n    componentWillReceiveProps(newProps) {\n        if(newProps.gamesProcessed>0) {\n            this.setState({isGamesSubsectionOpen:true})\n        }\n    }\n\n    load() {\n        this.props.clear()\n        this.setState({ isGamesSubsectionOpen: true, loadedSite:this.props.site })\n        // set the player name and color in the global state\n        this.props.onChange(\"playerName\", this.props.playerName)\n        this.props.onChange(\"playerColor\", this.props.playerColor)\n        this.readPgn(false)\n        this.props.setDownloading(true)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"Load\", this.props.site, this.props.playerColor === Constants.PLAYER_COLOR_WHITE ? 1 : 0)\n    }\n    stopDownloading() {\n        this.props.setDownloading(false)\n    }\n    stopDownloadingAction() {\n        this.stopDownloading()\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"StopDownloading\", this.props.site)\n    }\n    openingTreeLoadActions() {\n        return <div className=\"pgnloadersection\">\n            <MaterialUIButton\n            onClick={this.importTreeClicked.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<GetApp/>}\n            className=\"mainButton\" disableElevation\n            disabled={this.state.exportingInProgress}\n            >\n                {this.state.exportingInProgress?\"Loading from file\":\"Load openingtree\"}\n        </MaterialUIButton></div>\n    }\n    regularActions() {\n        let downloadDisabledReason = SitePolicy.treeSaveDisabledReason(\n                                        this.state.loadedSite, \n                                        this.props.site,\n                                        this.props.gamesProcessed, \n                                        this.props.isDownloading)\n        return <div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.load.bind(this)}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Equalizer />}\n            className=\"mainButton\" disableElevation\n        >\n            Analyze games\n        </MaterialUIButton></div>\n        <div className=\"pgnloadersection\"><MaterialUIButton\n            onClick={this.download.bind(this)}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<GetApp />}\n            className=\"mainButton\" disableElevation\n        >\n            Export as PGN\n        </MaterialUIButton></div>\n        {\n            <div className=\"pgnloadersection\"><Tooltip placement=\"top\" title={downloadDisabledReason||\"Save a .tree file locally for faster reload later\"}>\n                <span><MaterialUIButton\n                onClick={this.exportTreeClicked.bind(this)}\n                variant=\"contained\"\n                color=\"default\"\n                startIcon={this.state.exportingInProgress?<HourglassEmptyIcon/>:<Save/>}\n                className=\"mainButton\" disableElevation\n                disabled={!!downloadDisabledReason || this.state.exportingInProgress}\n                >\n                    {this.state.exportingInProgress?\"Saving to file\":\"Save .tree file\"}\n                </MaterialUIButton></span></Tooltip></div>\n            }\n        {\n            this.state.isGamesSubsectionOpen ?\n                <div>\n                    <div className=\"pgnloadersection\">\n                        {!this.props.playerColor?\"Games\":this.props.playerColor === Constants.PLAYER_COLOR_WHITE?\"White games\":\"Black games\"}{` loaded: ${this.props.gamesProcessed} `}{this.props.isDownloading ? <span className=\"stopDownloading\">[<span className=\"linkStyle\" onClick={this.stopDownloadingAction.bind(this)}><img alt=\"loading spinner\" src=\"./spinner.gif\" height=\"15\" />stop</span>]</span> : \"\"}\n                    </div>\n                    <div onClick={() => this.props.switchToMovesTab()} className=\"navLinkButton pgnloadersection\">\n                        <FontAwesomeIcon icon={faList} /> View Moves&gt;&gt;\n                </div>\n                </div>\n                : \"\"\n        }\n        </div>\n    }\n    mainComponent() {\n        if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.openingTreeLoadActions()\n        }\n        return this.regularActions()\n    }\n    render(){\n        if(this.props.expandedPanel) {\n            return <Fade timeout={Constants.LOADER_ANIMATION_DURATION_MS*2}>\n            {this.mainComponent()}\n        </Fade>\n        }\n        return <Fade in timeout={Constants.LOADER_ANIMATION_DURATION_MS*3}>\n            {this.mainComponent()}\n        </Fade>\n    }\n}","import {wrap} from 'comlink'\n\nconst PGNReader = wrap(new Worker('./PGNReader.js', { type: 'module' }))\n\nexport default PGNReader","import * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\nimport {copyText} from './loader/Common'\nimport {chessLogic} from '../app/chess/ChessLogic'\nimport OpeningGraph from '../app/OpeningGraph'\nimport {fetchBookMoves} from '../app/OpeningBook'\nimport CookieManager from '../app/CookieManager'\n\nfunction turnColor() {\n    return fullTurnName(this.chess.turn())\n}\n\nfunction fullTurnName(shortName) {\n    return shortName === 'w' ? Constants.PLAYER_COLOR_WHITE : Constants.PLAYER_COLOR_BLACK\n}\n\nfunction playerColor() {\n    return this.state.settings.playerColor\n}\n\nfunction brushes() {\n    if(!this.playerColor() || this.playerColor() === this.turnColor()) {\n        return this.forBrushes\n    }\n    return this.againstBrushes\n}\nfunction highlightArrow(move) {\n    this.setState({highlightedMove:move})\n}\n\nfunction calcMovable() {\nconst dests = {}\n    this.chess.SQUARES.forEach(s => {\n        const ms = this.chess.moves({square: s, verbose: true})\n        if (ms.length) dests[s] = ms.map(m => m.to)\n    })\n    return {\n        free: false,\n        dests,\n        color: this.turnColor()\n    }\n}\n\nfunction orientation() {\n    return this.state.settings.orientation\n}\n\nfunction onMove(sanOrOrig, dest) {\n    let moveObj = null\n    if(dest) {\n        moveObj = { from:sanOrOrig, to:dest, promotion: 'q'}\n    } else {\n        moveObj = sanOrOrig\n    }\n    const chess = this.chess\n    let move = chess.move(moveObj)\n    this.setState({ fen: chess.fen(), lastMove: move})\n}\n\n\nfunction onMoveAction(sanOrOrig, dest) {\n    this.onMove(sanOrOrig, dest)\n    trackEvent(Constants.EVENT_CATEGORY_CHESSBOARD, \"Move\")\n}\n\nfunction navigateTo(fen, previousMove){\n    this.chess = chessLogic(this.state.variant, fen)\n    this.setState({fen:fen, lastMove:previousMove})\n}\nfunction updateProcessedGames(downloadLimit, n, parsedGame) {\n    let totalGamesProcessed = this.state.gamesProcessed+n\n    this.state.openingGraph.addPGN(parsedGame.pgnStats, parsedGame.parsedMoves,\n            parsedGame.latestFen,parsedGame.playerColor, this.state.variant)\n    this.setState({\n        gamesProcessed: totalGamesProcessed,\n        downloadingGames: (totalGamesProcessed<downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)?this.state.downloadingGames:false\n    })\n    // continue to download games if \n    // 1. we have not reached download limit OR\n    //    there is no download limit set (downloadLimit>MAX condition)\n    // 2. user did not hit stop button\n    return (totalGamesProcessed < downloadLimit || downloadLimit>=Constants.MAX_DOWNLOAD_LIMIT)&& this.state.downloadingGames\n}\nfunction moveToShape(move) {\n    return {\n        orig:move.orig,\n                    dest: move.dest !== move.orig? move.dest:null,\n                    brush: this.brushes()[move.level]\n    }\n}\n\nfunction autoShapes(moves, highlightedMove) {\n    var shapes = []\n    if(highlightedMove) {\n        if(!highlightedMove.orig || !highlightedMove.dest) {\n            let chess = chessLogic(this.state.variant, this.state.fen)\n            let move = chess.move(highlightedMove.san)\n            highlightedMove.orig=move.from\n            highlightedMove.dest=move.to\n        }\n        highlightedMove.level = 0\n        shapes.push(this.moveToShape(highlightedMove))\n    }\n    if(moves) {\n        shapes = shapes.concat(moves.filter((m)=>{\n            if(!highlightedMove) {\n                return true\n            } \n            if (highlightedMove.orig === m.orig && highlightedMove.dest === m.dest) {\n                return false\n            }\n            return true\n        }).map(this.moveToShape.bind(this)))\n    }\n    return this.fillArray(shapes,  25)\n}\n\nfunction getPlayerMoves() {\n    if(!this.state.openingGraph.hasMoves) {\n        return null;\n    }\n    var moves = this.state.openingGraph.movesForFen(this.chess.fen())\n    return moves?moves.sort((a,b)=>b.moveCount-a.moveCount):[]\n}\n\n\n\nfunction gameResults() {\n    return this.state.openingGraph.gameResultsForFen(this.chess.fen())\n}\n\nfunction fillArray(arr, len) {\n    for (var i = arr.length; i < len; i++) {\n        arr.push({'orig':'i'+i, 'dest':'i'+(i+1), brush:this.brushes()[0]});\n    }\n    return arr;\n}\n\nfunction reset() {\n    this.chess = chessLogic(this.state.variant)\n    this.setState({fen: this.chess.fen(), lastMove:null})\n}\n\nfunction clear() {\n    this.state.openingGraph.clear()\n    this.state.gamesProcessed = 0\n    this.reset()\n}\n\nfunction settingsChange(name, value) {\n    if(name === 'movesSettings') {\n        let settingsToPersist = {}\n        settingsToPersist[name] = value\n        CookieManager.setSettingsCookie(settingsToPersist)\n        this.state.openingGraph.clearBookNodes()\n    }\n    let settings = this.state.settings\n    settings[name] = value;\n    this.setState({\n        'settings':settings\n    })\n}\n\nfunction launch(url) {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n\n\nfunction showError(message, trackingEvent, subMessage, action, severity) {\n    let errorActionText, errorAction\n    let messageSeverity = severity || Constants.ERROR_SEVERITY_ERROR\n    if(action === Constants.ERROR_ACTION_VISIT_OLD_SITE) {\n        errorActionText=\"Visit old site\"\n        errorAction = launch(\"https://www.openingtree.com/old\")\n    } else if(action !== Constants.ERROR_ACTION_NONE){\n        errorActionText=\"Report this\"\n        errorAction = this.toggleFeedback(true)\n    }\n    this.setState({message:message, subMessage:subMessage,\n        errorAction:errorAction, errorActionText:errorActionText,\n        messageSeverity:messageSeverity})\n    let eventName = messageSeverity+\"Shown\"\n    if(trackingEvent) {\n        eventName = eventName+\":\"+trackingEvent\n    }\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,eventName, message)\n}\n\nfunction showInfo(message, trackingLabel) {\n    this.setState({message:message, messageSeverity:Constants.ERROR_SEVERITY_SUCCESS})\n    trackEvent(Constants.EVENT_CATEGORY_MESSAGE_SHOWN,\"infoShown\",\n        trackingLabel?trackingLabel:message)\n}\n\n\nfunction closeError() {\n    this.setState({message:'', subMessage:''})\n}\n\nfunction toggleFeedback(diagnosticsOpen) {\n    return () => {\n        let feedbackOpen = this.state.feedbackOpen\n        this.closeError()\n        this.setState({feedbackOpen:!feedbackOpen,\n                diagnosticsDataOpen:diagnosticsOpen})\n    }\n}\n\nfunction setDownloading(val) {\n    this.setState({downloadingGames:val})\n}\n\nfunction toggleDiagnosticsData() {\n    this.setState({diagnosticsDataOpen:!this.state.diagnosticsDataOpen})\n}\n\nfunction copyDiagnostics() {\n    copyText(\"diagnosticsText\")\n    this.showInfo(\"Copied Diagnostics data\")\n}\n\n\nfunction importGameState(importState) {\n    this.setState({\n      settings:importState.settings,\n      openingGraph:importState.openingGraph,\n      gamesProcessed:importState.gamesProcessed,\n      variant:importState.variant?importState.variant:Constants.VARIANT_STANDARD\n    })\n    setImmediate(this.reset.bind(this))// setImmediate because we want the variant change to take effect\n  }\n  function getChessboardWidth(){\n    // getting nearest multiple of 8 because chessground has \n    // css alignment issues if board width is not a multple of 8\n    \n    return `${nearestMultipleOf8(getChessboardWidthInternal())}px`\n  }\n  function nearestMultipleOf8(n){\n      while(n%8!==0) {\n          n++;\n      }\n      return n;\n  }\n  function getChessboardWidthInternal(){\n    // have to manually set the width to pixels instead of \"vw\" value\n    // this is because chessground component does not behave well with \"vw\" values\n    if (window.innerWidth<=768) {\n      return Math.round(window.innerWidth*95/100) //95vw\n    } else if ((window.innerWidth<=1424)) {\n      return Math.round(Math.min(window.innerWidth*48/100,Math.max(512,window.innerHeight-100))) // 40vw\n    } else {\n      return Math.round(Math.min(712,Math.max(512,window.innerHeight-100)))// innherHeight-100 to leave some space for header and footer\n    }\n\n  }\n\nfunction getDiagnosticsValue() {\n  return `--------------------\n  ${navigator.userAgent}\n  -------------------\n  ${JSON.stringify(this.state)}\n  -------------------\n  `\n}\nfunction getRedditLink() {\n    return `https://www.reddit.com/message/compose/?to=${Constants.OPENNIG_TREE_REDDIT}&subject=${this.getSubject()}&message=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getEmailLink() {\n    return `mailto:${Constants.OPENING_TREE_EMAIL}?subject=${this.getSubject()}&body=%0D%0A%0D%0A%0D%0A${this.getBody()}`\n}\n\nfunction getSubject() {\n    return this.state.diagnosticsDataOpen?\"Possible Openingtree bug\":\"Feedback on Openingtree\"\n}\nfunction getBody() {\n    return this.state.diagnosticsDataOpen?this.getDiagnosticsValue():\"\"\n}\n\nfunction variantChange(newVariant) {\n    this.setState({variant:newVariant, openingGraph:new OpeningGraph(newVariant)})\n    setImmediate(this.reset.bind(this))\n}\n\n// fetch the book moves openinggraph directly if they are available\n// otherwise \n//  1. fetch them from lichess\n//  2. store them in openinggraph\n//  3. update the component so that getBookMoves gets called again\nfunction getBookMoves() {\n    let moves = this.state.openingGraph.getBookNode(this.chess.fen())\n    if(this.state.settings.movesSettings.openingBookType === Constants.OPENING_BOOK_TYPE_OFF) {\n        return {fetch:'off'}\n    }\n\n    if(!moves) {\n        moves = this.forceFetchBookMoves()\n    }\n    return moves\n}\n\nfunction forceFetchBookMoves() {\n    let moves = fetchBookMoves(this.state.fen, this.state.variant, this.state.settings.movesSettings, (moves)=>{\n        this.state.openingGraph.addBookNode(this.chess.fen(), moves)\n        this.setState({update:this.state.update+1})\n    })\n    this.state.openingGraph.addBookNode(this.chess.fen(), moves)\n    setImmediate(()=>this.setState({update:this.state.update+1}))\n    return moves\n}\n\nfunction mergePlayerAndBookMoves(playerMovesToShow, bookMovesToShow) {\n    if(!playerMovesToShow) {\n        return\n    }\n    let bookMovesMap = createMap(bookMovesToShow.moves)\n    playerMovesToShow.forEach((move)=>{\n        let bookMove = bookMovesMap.get(move.san)\n        if(!bookMove) {\n            return\n        }\n        move.compareTo = {\n            bookScore:getCompareScores(bookMove),\n            userScore:getCompareScores(move),\n            values:getCompareToValues(bookMove)\n        }\n        bookMove.compareTo = {\n            bookScore:getCompareScores(bookMove),\n            userScore:getCompareScores(move),\n            values:getCompareToValues(move)\n        }\n    })\n}\nfunction getCompareScores(move){\n    return (move.details.whiteWins+move.details.draws/2)/move.details.count*100\n}\n\nfunction getCompareToValues(move) {\n    return [move.details.whiteWins/move.details.count*100, \n        (move.details.whiteWins+move.details.draws)/move.details.count*100]\n}\n\nfunction createMap(movesToShow){\n    let map = new Map()\n    if(!movesToShow) {\n        return map\n    }\n    movesToShow.forEach((move)=> {\n        map.set(move.san, move)\n    })\n    return map\n}\n\n\nfunction addStateManagement(obj){\n    obj.orientation  = orientation\n    obj.turnColor = turnColor\n    obj.calcMovable = calcMovable\n    obj.onMove = onMove\n    obj.onMoveAction = onMoveAction\n    obj.autoShapes = autoShapes\n    obj.updateProcessedGames = updateProcessedGames\n    obj.settingsChange = settingsChange\n    obj.reset = reset\n    obj.clear = clear\n    obj.navigateTo = navigateTo\n    obj.playerColor = playerColor\n    obj.fillArray = fillArray\n    obj.brushes = brushes\n    obj.moveToShape = moveToShape\n    obj.getPlayerMoves = getPlayerMoves\n    obj.gameResults = gameResults\n    obj.showError = showError\n    obj.showInfo = showInfo\n    obj.closeError = closeError\n    obj.toggleFeedback = toggleFeedback.bind(obj)\n    obj.setDownloading = setDownloading\n    obj.toggleDiagnosticsData = toggleDiagnosticsData.bind(obj)\n    obj.copyDiagnostics = copyDiagnostics.bind(obj)\n    obj.importGameState = importGameState\n    obj.getDiagnosticsValue = getDiagnosticsValue\n    obj.getChessboardWidth = getChessboardWidth\n    obj.getEmailLink = getEmailLink\n    obj.getSubject = getSubject\n    obj.getBody = getBody.bind(obj)\n    obj.getRedditLink = getRedditLink\n    obj.variantChange = variantChange\n    obj.getBookMoves = getBookMoves\n    obj.forceFetchBookMoves = forceFetchBookMoves\n    obj.mergePlayerAndBookMoves = mergePlayerAndBookMoves\n    obj.highlightArrow = highlightArrow\n}\n\nexport {addStateManagement}","import request from 'request'\nimport * as Common from './Common'\n\nexport function fetchBookMoves(fen, variant, bookSettings, callback) {\n    let ratings = bookSettings.openingBookRating\n    let speeds = bookSettings.openingBookTimeControls\n    let bookType = bookSettings.openingBookType\n    let url = `https://explorer.lichess.ovh/${bookType}?fen=${fen}&play=&variant=${Common.lichessPerf(variant)}${joinParams('ratings',ratings)}${joinParams('speeds',speeds)}`\n    request.get(url, (error, response) =>{\n        if(error) {\n            callback({fetch:\"failed\"})\n            return \n        }\n        try{\n            callback(JSON.parse(response.body))\n            return\n        } catch (e) {\n            console.log(e)\n        }\n        callback({fetch:\"failed\"})\n    })\n    return {fetch:\"pending\"}\n    //https://explorer.lichess.ovh/lichess?fen=rnbqkbnr%2Fpppppppp%2F8%2F8%2F8%2F8%2FPPPPPPPP%2FRNBQKBNR%20w%20KQkq%20-%200%201&play=&variant=kingOfTheHill&speeds%5B%5D=bullet&speeds%5B%5D=blitz&speeds%5B%5D=rapid&speeds%5B%5D=classical&ratings%5B%5D=1600&ratings%5B%5D=1800&ratings%5B%5D=2000&ratings%5B%5D=2200&ratings%5B%5D=2500\n\n}\n\nfunction joinParams(paramName, ratings) {\n    return ratings.map(r=>`&${paramName}[]=${r}`).join('')\n}\n","import * as Constants from '../../app/Constants'\nimport * as Common from '../../app/Common'\nimport {getTimeControlsArray} from '../../app/util'\n\nlet timeClasses = [\n    {\n        label:\"Fast time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    },\n    {\n        label:\"Slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ\n        ]\n    },\n    {\n        label:\"Reasonable time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET\n        ]\n    },\n    {\n        label:\"Exclude slow time controls\",\n        selectedTimeControls:[\n            Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_ULTRA_BULLET,\n            Constants.TIME_CONTROL_BLITZ,\n            Constants.TIME_CONTROL_RAPID\n        ],\n        unselectedTimeControls:[\n            Constants.TIME_CONTROL_CLASSICAL,\n            Constants.TIME_CONTROL_CORRESPONDENCE\n        ]\n    }\n]\n        \n\n\nexport function timeControlLabel(site, timeControlState) {\n    let selectedTimeControls = getTimeControlsArray(site, timeControlState, true)\n    let unselectedTimeControls = getTimeControlsArray(site, timeControlState, false)\n    if(unselectedTimeControls.length === 0 || selectedTimeControls.length === 0) {\n        return \"All time controls\"\n    }\n    if(selectedTimeControls.length === 1) {\n        return Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]\n    }\n    if(unselectedTimeControls.length === 1) {\n        return `All except ${Common.TIME_CONTROL_LABELS[unselectedTimeControls[0]]}`\n    }\n    if(selectedTimeControls.length === 2) {\n        return `${Common.TIME_CONTROL_LABELS[selectedTimeControls[0]]} and ${Common.TIME_CONTROL_LABELS[selectedTimeControls[1]]}`\n    }\n\n    return lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls)\n}\n\nfunction lichessTimeControlLabel(selectedTimeControls, unselectedTimeControls) {\n    let timeClass = timeClasses.filter(\n        (timeClass) => {\n            return includesAll(unselectedTimeControls,timeClass.unselectedTimeControls)\n                && includesAll(selectedTimeControls,timeClass.selectedTimeControls)\n    })\n    if(timeClass.length) {\n        return timeClass[0].label\n    } \n    return selectedTimeControls.map(control=>Common.TIME_CONTROL_LABELS[control]).join(', ')\n}\n\nfunction includesAll(arr, subArray) {\n    return subArray.every(v => arr.includes(v));\n}\n","import {timeControlLabel} from './TimeControlLabels'\nimport {getSelectedTimeFrameData} from '../../app/util'\nimport * as Constants from '../../app/Constants'\n\nexport const getTimeControlLabel = timeControlLabel\n\nexport function getRatedLabel(rated) {\n    if(rated === 'all') {\n        return \"Rated and casual\"\n    } else if (rated === 'rated') {\n        return \"Rated only\"\n    } else if (rated === 'casual') {\n        return \"Casual only\"\n    }\n}\n\nexport function getWhenPlayedLabel(timeframe, timeframeSteps) {\n    return getSelectedTimeFrameData(timeframe, timeframeSteps).label\n}\n\nexport function getELORangeLabel(selectedEloRange) {\n    if(selectedEloRange[0] === 0 && selectedEloRange[1]===Constants.MAX_ELO_RATING) {\n        return \"All elo ratings\"\n    } else if (selectedEloRange[0] === 0) {\n        return `Below ${selectedEloRange[1]}`\n    } else if (selectedEloRange[1] === Constants.MAX_ELO_RATING) {\n        return `Above ${selectedEloRange[0]}`\n    } else {\n        return `Between ${selectedEloRange[0]} and ${selectedEloRange[1]}`\n    }\n}\nexport function getDownloadLimitLabel(downloadLimit) {\n    return downloadLimit>= Constants.MAX_DOWNLOAD_LIMIT?\"No limit\":`${downloadLimit} games`\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport React from 'react'\nimport {Collapse, Container, Row, Col} from 'reactstrap'\nimport { FormControlLabel,Slider } from '@material-ui/core';\nimport * as Constants from '../../app/Constants'\nimport {getTimeControlLabel, getELORangeLabel, getRatedLabel, getWhenPlayedLabel, getDownloadLimitLabel} from './FilterLabels'\nimport * as Common from '../../app/Common'\nimport {trackEvent} from '../../app/Analytics'\n\nexport default class AdvancedFilters extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentlyOpenAdvancedFilter:'',\n        }\n        this.timeframeMarks=[\n            {\n                value:0,\n                label:\"Big bang\"\n            }, {\n                value:props.timeframeSteps.length-1,\n                label:\"Now\"\n            }]\n        this.downloadLimitMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_DOWNLOAD_LIMIT,\n                label:`No limit`\n            }]\n        this.eloRangeMarks=[\n            {\n                value:0,\n                label:\"0\"\n            }, {\n                value:Constants.MAX_ELO_RATING,\n                label:`No limit`\n            }]\n    \n    }\n    setCurrentlyOpenAdvancedFilter(filterName) {\n        return () => {\n            if(this.state.currentlyOpenAdvancedFilter === filterName) {\n                //close if already open\n                filterName = ''\n            }\n            this.setState({currentlyOpenAdvancedFilter:filterName})\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"AdvancedFilterChange\", filterName)\n        }\n    }\n\n    getFilters(site){\n        return <div>\n            {this.subSectionComponent('Mode', getRatedLabel(this.props.advancedFilters.rated), this.props.toggleRated)}\n            {this.subSectionComponent('Time control', getTimeControlLabel(this.props.site, this.props.advancedFilters), \n                    this.setCurrentlyOpenAdvancedFilter('timeControl').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'timeControl'}>\n                    {this.getTimeControlFilters(site, 4)}\n                </Collapse>\n            )}\n            {this.subSectionComponent('When played', getWhenPlayedLabel(this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME], this.props.timeframeSteps), \n                this.setCurrentlyOpenAdvancedFilter('whenPlayed').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'whenPlayed'}>\n                    {this.getTimeFrameFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Opponent elo range', getELORangeLabel(this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]), \n                this.setCurrentlyOpenAdvancedFilter('eloRange').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'eloRange'}>\n                    {this.getEloRangeFilters()}\n                </Collapse>)}\n            {this.subSectionComponent('Download limit', getDownloadLimitLabel(this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]), \n                this.setCurrentlyOpenAdvancedFilter('downloadLimit').bind(this),\n                <Collapse isOpen={this.state.currentlyOpenAdvancedFilter === 'downloadLimit'}>\n                    {this.getDownloadLimitFilters()}\n                </Collapse>)}\n      </div>\n    }\n\n    getDownloadLimitFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_DOWNLOAD_LIMIT]}\n            onChange={this.props.handleDownloadLimitChange}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(val)=>val>=Constants.MAX_DOWNLOAD_LIMIT?\"All\":val}\n            step={100}\n            min={0}\n            marks={this.downloadLimitMarks}\n            max={Constants.MAX_DOWNLOAD_LIMIT}\n        />\n    }\n\n    getTimeFrameFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_SELECTED_TIMEFRAME]}\n            onChange={this.props.handleTimeframeChange}\n            valueLabelDisplay=\"off\"\n            valueLabelFormat={(val)=>this.props.timeframeSteps[val].label}\n            step={1}\n            marks={this.timeframeMarks}\n            min={0}\n            max={this.props.timeframeSteps.length-1}\n        />\n    }\n\n    getEloRangeFilters() {\n        return <Slider className = \"sliderCustom\"\n            value={this.props.advancedFilters[Constants.FILTER_NAME_ELO_RANGE]}\n            onChange={this.props.handleEloRangeChange}\n            valueLabelDisplay=\"off\"\n            marks={this.eloRangeMarks}\n            min={0}\n            max={Constants.MAX_ELO_RATING}\n        />\n    }\n\n    getTimeControlFilters(site){\n        let firstRow = null, middleRow = null, lastRow = null\n        let colWidth = null\n        if(site === 'lichess') {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_ULTRA_BULLET]\n            middleRow = [Constants.TIME_CONTROL_BLITZ,\n                        Constants.TIME_CONTROL_CLASSICAL]\n            lastRow = [Constants.TIME_CONTROL_RAPID,\n                        Constants.TIME_CONTROL_CORRESPONDENCE]\n            colWidth = '4'\n                    \n        } else {\n            firstRow = [Constants.TIME_CONTROL_BULLET,\n                        Constants.TIME_CONTROL_BLITZ]\n            lastRow = [Constants.TIME_CONTROL_RAPID, \n                        Constants.TIME_CONTROL_DAILY]\n            colWidth = '6'\n        }\n        return <FormControl><FormGroup><Container>\n            {this.getTimeControlFilterRow(firstRow,colWidth,'first')}\n            {middleRow?this.getTimeControlFilterRow(middleRow,colWidth,'middle'):null}\n            {this.getTimeControlFilterRow(lastRow,colWidth,'last')}\n          </Container>\n        </FormGroup></FormControl>\n      \n    }\n\n    getTimeControlFilterRow(controls,firstColumnWidth, position){\n        let clsName = 'topBottomNegativeMargin'\n        if(position === \"first\") {\n            clsName = 'bottomNegativeMargin'\n        } else if (position === \"last\") {\n            clsName = 'topNegativeMargin'\n        } \n        return <Row className={clsName}>\n            {controls.map((control) => \n            <Col sm={firstColumnWidth} key={`ctrl${control}`}>\n                \n            <FormControlLabel className = \"nomargin\"\n                control={<Checkbox checked={this.props.advancedFilters[control]} color=\"primary\" \n                onChange={this.props.handleTimeControlChange} name={control} />}\n                label={Common.TIME_CONTROL_LABELS[control]}\n          /></Col>)}</Row>\n    }\n\n    subSectionComponent(title, label, changeCallback, children) {\n        return <div className=\"pgnloadersection\">{title}: <span className=\"smallText\">[<span className=\"linkStyle\" onClick={changeCallback}>change</span>]</span>\n        <div><b>{label}</b></div>{children}\n        </div>\n    }\n\n\n    render() {\n        return this.getFilters(this.props.site)\n    }\n\n}","module.exports = __webpack_public_path__ + \"static/js/0.feb39b57.chunk.worker.js\"","import * as Constants from './Constants'\n\nexport const LICHESS_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_ULTRA_BULLET,\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_CLASSICAL,\n    Constants.TIME_CONTROL_CORRESPONDENCE\n]\nexport const CHESS_DOT_COM_TIME_CONTROLS = [\n    Constants.TIME_CONTROL_BULLET,\n    Constants.TIME_CONTROL_BLITZ,\n    Constants.TIME_CONTROL_RAPID,\n    Constants.TIME_CONTROL_DAILY,\n]\n\nexport const TIME_CONTROL_LABELS = {\n    [Constants.TIME_CONTROL_ULTRA_BULLET]: \"Ultrabullet\",\n    [Constants.TIME_CONTROL_BULLET]: \"Bullet\",\n    [Constants.TIME_CONTROL_BLITZ]: \"Blitz\",\n    [Constants.TIME_CONTROL_RAPID]: \"Rapid\",\n    [Constants.TIME_CONTROL_CLASSICAL]: \"Classical\",\n    [Constants.TIME_CONTROL_CORRESPONDENCE]: \"Correspondence\",\n    [Constants.TIME_CONTROL_DAILY]: \"Daily\"\n}\n\nexport function trimString(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nexport function lichessVariantHeader(variant) {\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.LICHESS_HEADER_RACING_KINGS\n    } else if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.LICHESS_HEADER_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.LICHESS_HEADER_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.LICHESS_HEADER_CRAZYHOUSE\n    }\n    return Constants.LICHESS_HEADER_STANDARD\n}\nexport function lichessPerf(variant) {\n    if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.LICHESS_PERF_KING_OF_THE_HILL\n    } else if (variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.LICHESS_PERF_RACING_KINGS\n    } else if (variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.LICHESS_PERF_THREE_CHECK\n    } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.LICHESS_PERF_CRAZYHOUSE\n    } else if (variant === Constants.VARIANT_STANDARD) {\n        return Constants.LICHESS_PERF_STANDARD\n    }\n}\nexport function chessDotComRules(variant) {\n    if(variant === Constants.VARIANT_KING_OF_THE_HILL) {\n        return Constants.CHESS_COM_RULES_KING_OF_THE_HILL\n    } else if(variant === Constants.VARIANT_THREE_CHECK) {\n        return Constants.CHESS_COM_RULES_THREE_CHECK\n    } else if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return Constants.CHESS_COM_RULES_CRAZYHOUSE\n    }\n    return Constants.CHESS_COM_RULES_STANDARD\n}\n\n\nexport const DP_TABLE = {\n    \"100\":800,   \"99\":677,    \"98\":589,    \"97\":538,\n    \"96\":501,    \"95\":470,    \"94\":444,    \"93\":422,\n    \"92\":401,    \"91\":383,    \"90\":366,    \"89\":351,\n    \"88\":336,    \"87\":322,    \"86\":309,    \"85\":296,\n    \"84\":284,    \"83\":273,    \"82\":262,    \"81\":251,\n    \"80\":240,    \"79\":230,    \"78\":220,    \"77\":211,\n    \"76\":202,    \"75\":193,    \"74\":184,    \"73\":175,\n    \"72\":166,    \"71\":158,    \"70\":149,    \"69\":141,\n    \"68\":133,    \"67\":125,    \"66\":117,    \"65\":110,\n    \"64\":102,    \"63\":95,     \"62\":87,     \"61\":80,\n    \"60\":72,     \"59\":65,     \"58\":57,     \"57\":50,\n    \"56\":43,     \"55\":36,     \"54\":29,     \"53\":21,\n    \"52\":14,     \"51\":7,      \"50\":0,      \"49\":-7,\n    \"48\":-14,    \"47\":-21,    \"46\":-29,    \"45\":-36,\n    \"44\":-43,    \"43\":-50,    \"42\":-57,    \"41\":-65,\n    \"40\":-72,    \"39\":-80,    \"38\":-87,    \"37\":-95,\n    \"36\":-102,   \"35\":-110,   \"34\":-117,   \"33\":-125,\n    \"32\":-133,   \"31\":-141,   \"30\":-149,   \"29\":-158,\n    \"28\":-166,   \"27\":-175,   \"26\":-184,   \"25\":-193,\n    \"24\":-202,   \"23\":-211,   \"22\":-220,   \"21\":-230,\n    \"20\":-240,   \"19\":-251,   \"18\":-262,   \"17\":-273,\n    \"16\":-284,   \"15\":-296,   \"14\":-309,   \"13\":-322,\n    \"12\":-336,   \"11\":-351,   \"10\":-366,   \"9\":-383,\n    \"8\":-401,    \"7\":-422,    \"6\":-444,    \"5\":-470,\n    \"4\":-501,    \"3\":-538,    \"2\":-589,    \"1\":-677,\n    \"0\":-800,\n}","import Chess from 'chess.js'\n\nexport default class RacingKingsChess {\n    constructor(fen){\n        this.chess = new Chess(fen);\n        this.SQUARES = this.chess.SQUARES\n    }\n    fen(){\n        return this.chess.fen()\n    }\n    turn() {\n        return this.chess.turn()\n    }\n    moves(options) {\n        // checks are not allowed in racing kings \n        // so remove moves that cause a check\n        return this.chess.moves(options).filter((move)=>{\n            let san = move.san || move\n            return !san.endsWith(\"+\") && !san.endsWith(\"#\")\n        })\n    }\n\n    move(moveObject, options) {\n        if(typeof moveObject !== \"string\") {\n            return this.chess.move(moveObject, options)\n        }\n        \n        if (moveObject.endsWith('#')) {\n            // a move ending in checkmate in racing kings will not \n            // be a checkmate under standard rules. so remove the # at the end \n            // to make it pass as a standard notation \n            moveObject = moveObject.substring(0, moveObject.length - 1);\n        } \n        let move = this.chess.move(moveObject, options)\n        if(move) {\n            return move\n        }\n        let disambiguatedMove = disambiguate(moveObject, this.moves())\n        if(!disambiguatedMove) {\n            // disambiguation failed\n            return move\n        }\n        // making this move failed so try disambiguating\n        return this.chess.move(disambiguatedMove, options)\n    }\n\n}\n\n// this is needed because in certain positions, while a disambiguating notation is needed \n// in standard chess, it is not needed in racing kings. \n// for example in this position \"1q4R1/1kN2Q2/8/5K2/8/4Nn2/8/b7 w - - 1 21\"\n// Move Nd5 is ambiguous in standard chess but is clear in Racing kings\n// because Ncd5 will lead to check\n\n// The way this function works is by actually finding the disambiguated move Ned5\n// to pass to the chess.js library. Since the move Ncd5 will end with a check (+) \n// it will fail the filter below\nfunction disambiguate(problematicMove, potentialMoves) {\n    let filteredMoves = potentialMoves.filter((potentialMove)=>{\n        if(problematicMove.charAt(0) !== potentialMove.charAt(0)) {\n            return false;\n        }\n        return problematicMove.slice(-2) === potentialMove.slice(-2)\n    })\n    if(filteredMoves.length !== 1) {\n        return null\n    }\n    return filteredMoves[0]\n}","import Chess from 'chess.js'\n\nexport default class CrazyhouseChess {\n    constructor(fen){\n        this.chess = new Chess(fen);\n        this.SQUARES = this.chess.SQUARES\n    }\n    fen(){\n        return this.chess.fen()\n    }\n    turn() {\n        return this.chess.turn()\n    }\n    moves(options) {\n        return this.chess.moves(options)\n    }\n\n    move(moveObject, options) {\n        let move = this.chess.move(moveObject, options)\n        if(move) {\n            return move\n        }\n        if(typeof moveObject === \"string\") {\n            return this.moveSan(moveObject)\n        } else {\n            return this.moveSan(moveObject.san)\n        }\n    }\n\n    moveSan(san) {\n        if(san.includes('@')){\n            let locationOfAt = san.indexOf('@')\n            let piece = ''\n            if(locationOfAt === 0) {\n                piece = this.chess.PAWN\n            } else {\n                piece = san.charAt(0).toLowerCase()\n            }\n            let location = san.slice(locationOfAt+1,locationOfAt+3)\n            let success = this.chess.put({type:piece, color:this.turn()}, location)\n            if(!success) {\n                return null\n            }\n            let color = this.turn()\n\n            this.toggleTurn()\n            return {\n                color: color,\n                from:location,\n                to:location,\n                san:san\n            }\n        }\n        return null\n    }\n    toggleTurn() {\n        var tokens = this.chess.fen().split(' ');\n        // switch the color\n        tokens[1] = tokens[1] === 'b'? 'w' : 'b'\n        // remove en passent\n        tokens[3] = '-'\n        this.chess.load(tokens.join(' '));\n    }\n    \n}\n\n","import * as Constants from '../Constants'\nimport Chess from 'chess.js'\nimport RacingKingsChess from './RacingKingsChess'\nimport CrazyhouseChess from './CrazyhouseChess'\n\nexport function chessLogic(variant, fen) {\n    if(!fen) {\n        fen = rootFen(variant)\n    }\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return new RacingKingsChess(fen)\n    }\n    if(variant === Constants.VARIANT_CRAZYHOUSE) {\n        return new CrazyhouseChess(fen)\n    }\n    return new Chess(fen)\n}\n\nexport function rootFen(variant) {\n    if(variant === Constants.VARIANT_RACING_KINGS) {\n        return Constants.RACING_KINGS_ROOT_FEN\n    }\n    return Constants.ROOT_FEN\n}","import * as ChessLogic from './chess/ChessLogic'\n\nexport default class OpeningManager {\n    plys = []\n    currentIndex = 0\n    constructor(variant) {\n        this.plys = [{pgn:'', fen:ChessLogic.rootFen(variant), move:null}]\n        this.currentIndex = 0\n    }\n    addPly(fen,move) {\n        if(this.currentIndex<this.plys.length-1 && this.plys[this.currentIndex+1].move.san === move.san) {\n            this.moveForward()\n            return\n        }\n        this.plys = this.plys.slice(0,this.currentIndex+1)\n        this.plys.push({\n            pgnAsList:this.pgnAsList(move.san),\n            fen: fen,\n            move: move\n        })\n        this.currentIndex++;\n        return this.plys[this.currentIndex]\n    }\n\n    pgnAsList(san) {\n        let pgnSoFar = this.pgnListSoFar()\n        let pgnList\n        if (!pgnSoFar) {\n            pgnList = []\n        } else {\n            pgnList = [...pgnSoFar]\n        }\n        let numPlys = this.plys.length\n        if(numPlys%2 !== 0) {\n            pgnList.push({\n                moveNumber:pgnList.length+1,\n                whitePly:san,\n                blackPly:''\n            })\n        } else {\n            let currMove = pgnList[pgnList.length-1]\n            currMove.blackPly = san\n            pgnList[pgnList.length-1] = currMove\n        }\n        return pgnList\n    }\n\n    currentMove() {\n        return Math.floor((this.currentIndex-1)/2);\n    }\n\n    pgnListSoFar(){\n        return this.plys[this.plys.length-1].pgnAsList\n    }\n\n    fen(){\n        return this.plys[this.currentIndex].fen\n    }\n\n    moveForward() {\n        return this.moveTo(this.currentIndex+1)\n    }\n    moveBack() {\n        return this.moveTo(this.currentIndex-1)\n    }\n    moveTo(index) {\n        if(index>=0 && index<this.plys.length) {\n            this.currentIndex = index\n        }\n        return this.plys[this.currentIndex]\n    }\n\n}","import React from 'react'\nimport ChessEcoCodes from 'chess-eco-codes'\nimport OpeningManager from '../app/OpeningManager'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepForward, faStepBackward } from '@fortawesome/free-solid-svg-icons'\nimport * as Constants from '../app/Constants'\nimport {trackEvent} from '../app/Analytics'\n\nexport default class Navigator extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.openingManager = new OpeningManager(this.props.variant)\n        this.state = {\n            currentMove:0,\n          }      \n          window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        switch(e.keyCode) {\n          case 37:\n            this.previous(e, \"keyboard\")\n          break\n          case 39:\n            this.next(e, \"keyboard\")\n            break\n          default:\n            break\n\n        }\n      }\n    \n    shouldComponentUpdate(newProps) {\n        //console.log(newProps)\n        if(newProps.variant !== this.props.variant) {\n            this.openingManager = new OpeningManager(newProps.variant)\n            return true\n\n        }\n        if(newProps.fen !== this.openingManager.fen()) {\n            if(newProps.move === null) {\n                // called when \"clear\" or \"starting position\" actions are hit\n                this.openingManager = new OpeningManager(newProps.variant)\n                return true\n            }\n            this.openingManager.addPly(newProps.fen, newProps.move)\n            return true\n        }\n        return true\n    }\n\n    previous(e, device) {\n        let newState = this.openingManager.moveBack()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Previous\", device?device:\"mouse\")\n    }\n\n    next(e, device) {\n        let newState = this.openingManager.moveForward()\n        this.props.onChange(newState.fen, newState.move)\n        this.setState({currentMove:this.openingManager.currentMove()})\n        trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"Next\", device?device:\"mouse\")\n    }\n\n    moveTo(index) {\n        return () => {\n            let newState = this.openingManager.moveTo(index*2+1)\n            this.props.onChange(newState.fen, newState.move)\n            this.setState({currentMove:this.openingManager.currentMove()})\n            trackEvent(Constants.EVENT_CATEGORY_NAVIGATOR, \"move\", null, index)\n        }\n    }\n\n    render(){\n        let opening = ChessEcoCodes(this.openingManager.fen())\n        if (opening) {\n            this.opening = opening.name\n            this.openingCode = opening.code\n        }\n        if(!this.openingManager.pgnListSoFar()) {\n            return <div></div>\n        }\n        return <Container>\n            <Row>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick= {this.previous.bind(this)}><FontAwesomeIcon icon={faStepBackward} /> prev</Button> </Col>\n            <Col lg=\"6\" className=\"navSection\"><Button color=\"\" className= \"settingButton\" onClick = {this.next.bind(this)}>next <FontAwesomeIcon icon={faStepForward} /></Button></Col></Row>\n            <Row className=\"greyText\">{this.openingCode}: {this.opening}</Row>\n            {\n                this.openingManager.pgnListSoFar().map((move, index)=>\n                    <Row key={`${move.moveNumber}`} onClick={this.moveTo(index).bind(this)} className={`navCol ${this.openingManager.currentMove() === index? 'selectedMove':''}`}>\n                        <Col sm=\"12\" className = \"navMove border\">{`${move.moveNumber}. ${move.whitePly} ${move.blackPly}`}</Col>\n                    </Row>)\n            }\n        </Container>\n    }\n}","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faComments, faCaretDown} from '@fortawesome/free-solid-svg-icons'\nimport { faDiscord } from '@fortawesome/free-brands-svg-icons'\nimport * as Constants from '../app/Constants'\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  NavItem, NavLink\n} from 'reactstrap'\n\nconst GlobalHeader = (props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen)\n  const toggleModal = () => setModal(!modal)\n\n  const launch = (url) => {\n    return () => {\n      window.open(url, \"_blank\")\n    }\n  }\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <img src=\"/opening-tree-logo.png\" height=\"32px\" width=\"32px\" alt=\"Logo\"/>\n        <NavbarBrand href=\"/\">&nbsp;OpeningTree.com</NavbarBrand>\n        <NavbarToggler onClick={toggle}/>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(\"https://www.youtube.com/watch?v=AJ66-HqdpXE\")}>\"It's so powerful\" - IM Eric Rosen <span className=\"smallText\">[Watch video]</span></NavLink></NavItem>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={launch(Constants.OPENING_TREE_DISCORD)}><FontAwesomeIcon icon={faDiscord} className=\"discordIcon\"/> Join our discord</NavLink></NavItem>\n          </Nav>\n          <Nav className=\"\" navbar>\n          <NavItem><NavLink className=\"navLinkButton\" onClick={props.toggleFeedback}><FontAwesomeIcon icon={faComments} className=\"feedbackIcon\"/> Send feedback</NavLink></NavItem>\n          </Nav>\n          <UncontrolledDropdown>\n              <DropdownToggle className=\"bootNavColor\" nav>\n              <FontAwesomeIcon icon={faCaretDown} className=\"moreIcon\"/>More\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={toggleModal}>\n                  Acknowledgements\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.openingtree.com/old\")}>\n                  Old version\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://github.com/openingtree/openingtree\")}>\n                  Github\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={launch(\"https://lichess.org/\")}>\n                  Lichess\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.lichess4545.com/\")}>\n                  Lichess4545\n                </DropdownItem>\n                <DropdownItem onClick={launch(\"https://www.chess.com\")}>\n                  Chess.com\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n      \n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Acknowledgements</ModalHeader>\n        <ListGroup className=\"acknowledgement\">\n        <ListGroupItem tag=\"a\" href=\"https://lichess.org/api\" target=\"_blank\" action>Lichess API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.chess.com/club/chess-com-developer-community\" target=\"_blank\" action>Chess.com API</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/ruilisi/react-chessground\" target=\"_blank\" action>ChessGround</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jhlywa/chess.js\" target=\"_blank\" action>Chess.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/niklasf/eco\" target=\"_blank\" action>Eco</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/jimmywarting/StreamSaver.js\" target=\"_blank\" action>StreamSaver.js</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/authors/google/\" target=\"_blank\" action>Icons made by google</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.flaticon.com/\" target=\"_blank\" action>FlatIcons.com</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.freelogodesign.org\" target=\"_blank\" action>Free logo design</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://github.com/kevinludwig/pgn-parser\" target=\"_blank\" action>PGN Parser</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.npmjs.com/package/material-ui-dropzone\" target=\"_blank\" action>Dropzone</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.pgnmentor.com\" target=\"_blank\" action>PGN Mentor</ListGroupItem>\n        <ListGroupItem tag=\"a\" href=\"https://www.twitch.tv/imrosen\" target=\"_blank\" action>IM Eric Rosen</ListGroupItem>\n        </ListGroup>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GlobalHeader\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Backup from '@material-ui/icons/Backup';\nimport People from '@material-ui/icons/People';\nimport Save from '@material-ui/icons/Save';\nimport Divider from '@material-ui/core/Divider';\nimport DateRange from '@material-ui/icons/DateRange';\nimport {Badge} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChessRook } from '@fortawesome/free-solid-svg-icons'\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport { Button as MaterialUIButton } from '@material-ui/core'\n\n\nconst SOURCE_VARIANT_COMBINATION = {\n    [Constants.VARIANT_RACING_KINGS]:[Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_KING_OF_THE_HILL]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_THREE_CHECK]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE],\n    [Constants.VARIANT_CRAZYHOUSE]:[Constants.SITE_CHESS_DOT_COM, Constants.SITE_LICHESS, Constants.SITE_ONLINE_TOURNAMENTS, Constants.SITE_OPENING_TREE_FILE, Constants.SITE_PGN_FILE]\n}\n\nexport default class Source extends React.Component {\n    getSourceOption(source, addNumber) {\n        if (source === Constants.SITE_LICHESS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"lichess\" className=\"siteimage\" src=\"./lichesslogo.png\" /><span className=\"sourceName\"> lichess.org </span></span>\n        } else if (source === Constants.SITE_CHESS_DOT_COM) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<img alt=\"chess.com\" className=\"siteimage\" src=\"./chesscomlogo.png\" /></span>\n        } else if (source === Constants.SITE_PGN_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Backup className=\"lowOpacity\"/><span className=\"sourceName\"> Load <i>PGN</i> file</span></span>\n        } else if (source === Constants.SITE_EVENT_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<DateRange className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess events</span></span>\n        } else if (source === Constants.SITE_PLAYER_DB) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<People className=\"lowOpacity\"/><span className=\"sourceName\"> Notable chess players</span></span>\n        }  else if (source === Constants.SITE_OPENING_TREE_FILE) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}<Save className=\"lowOpacity\"/><span className=\"sourceName\"> Load <b>.tree</b> file</span></span>\n        } else if (source === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return <span>{addNumber?getNumberIcon('done', addNumber):null}{addNumber?<FontAwesomeIcon icon={faChessRook} className=\"lowOpacity\" />:<Badge className=\"sourceName\" color=\"info\">New!</Badge>}<span className=\"sourceName\"> Lichess tournaments</span></span>\n        }\n        return <span>{getNumberIcon(1, addNumber)}Select a source</span>\n    }\n    continue(){\n        this.props.siteChange(this.props.site)\n    }\n    setSite(event) {\n        let newSite = event.target.value\n        this.props.siteChange(newSite)\n    }\n    isSourceAvailable(source, variant) {\n        let supportedSources = SOURCE_VARIANT_COMBINATION[variant]\n        if(!supportedSources) {\n            return true\n        }\n        return supportedSources.includes(source)\n    }\n    render() {\n        return <Accordion TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'source'}\n            onChange={this.props.handleExpansionChange}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getSourceOption(this.props.site, true)}\n                </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <RadioGroup onChange={this.setSite.bind(this)} value={this.props.site}>\n                {this.getSourceRadio(Constants.SITE_LICHESS)}\n                {this.getSourceRadio(Constants.SITE_CHESS_DOT_COM)}\n                {this.getSourceRadio(Constants.SITE_ONLINE_TOURNAMENTS)}\n                {this.getSourceRadio(Constants.SITE_OPENING_TREE_FILE)}\n                {this.props.variant === Constants.VARIANT_STANDARD?<Divider className=\"dividerMargin\"/>:null}\n                {this.getSourceRadio(Constants.SITE_PLAYER_DB)}\n                {this.getSourceRadio(Constants.SITE_EVENT_DB)}\n                {this.getSourceRadio(Constants.SITE_PGN_FILE)}\n               </RadioGroup>\n            </AccordionDetails>\n            {this.props.site?\n            <span>\n            <Divider />\n\n            <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.continue.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></span>:\n                null\n            }\n        </Accordion>\n        \n    }\n\n    getSourceRadio(source) {\n        if(!this.isSourceAvailable(source,this.props.variant)) {\n            return null\n        }\n        return <FormControlLabel \n                className=\"sitelabel\" \n                value={source} \n                control={<Radio color=\"primary\" />} \n                label={this.getSourceOption(source)} />\n    }\n}","import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport { trackEvent } from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\n\nexport default class Dropzone extends React.Component{\n    handleFileChange(newFiles) {\n      trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FileSaved\", newFiles.length>0?newFiles[0].name:null)\n      this.props.filesChange(newFiles)\n    }\n    render(){\n      return (\n        <DropzoneArea \n        acceptedFiles={[]}\n        dropzoneText={this.props.dropzoneText}\n          onChange={this.handleFileChange.bind(this)}\n          dropzoneParagraphClass=\"dropzonetext\"\n          showFileNames={true}\n          useChipsForPreview={true}\n          previewChipProps={{className:\"previewChip\"}}\n          dropzoneClass=\"dropzone\"\n          filesLimit={this.props.filesLimit}\n          maxFileSize={3000000000000}\n          />\n      )  \n    }\n  } ","import SelectSearch from 'react-select-search';\nimport React from 'react'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport default class NotableChessGames extends React.Component {\n\n    updateDetails = (value) => {\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"NotableGameSelected\", value.value)\n        this.props.onChange(value)\n    }\n    \n    renderDetails(option) {\n        return (<div>\n                <span><LazyLoadImage alt={option.name} className=\"profilePicture\" width=\"40\" height=\"40\" src={option.profile.imageUrl} /></span>\n                <div>{option.name}</div>\n                <div className=\"smallText\">{option.profile.subText}</div>\n                </div>);\n    }\n    render() {\n        if(!this.props.list) {\n            return <div className=\"lowOpacity textCenter\"><img alt=\"loading\" width='25' height='25' src=\"./spinner.gif\"/> Loading List</div>\n        } else if(!this.props.list.length) {\n            return <div className=\"lowOpacity textCenter\"> Could not fetch list</div>\n        }\n        let options = this.props.list.map(option=>{return {...option, value:option.name}})\n        return <SelectSearch\n            name=\"goatPlayers\"\n            value={this.props.selectedDetail.value}\n            options={options}\n            placeholder={this.props.placeholder}\n            renderOption={this.renderDetails}\n            onChange={this.updateDetails}\n        />\n    }\n}\n","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport { Button as MaterialUIButton, TextField, AccordionDetails } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle} from '@fortawesome/free-solid-svg-icons'\nimport {faCheck, faSync, faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\nimport Divider from '@material-ui/core/Divider';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport Collapse from '@material-ui/core/Collapse';\nimport Dropzone from './Dropzone'\nimport NotableChessGames from './NotableChessGames';\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap'\nimport LockOpen from '@material-ui/icons/Lock'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport {Spinner} from 'reactstrap'\nimport { trackEvent } from '../../app/Analytics'\n\nexport default class User extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName:'',\n            tournamentUrl:'',\n            files:[],\n            selectedPlayer:{},\n            selectedEvent:{}\n        }\n        \n    }\n\n    editPlayerName(event) {\n        this.setState({\n            playerName: event.target.value,\n            playerNameError:''\n        })\n    }\n    editTournamentUrl(event) {\n        this.setState({\n            tournamentUrl: event.target.value,\n            tournamentUrlError:''\n        })\n    }\n    filesChange(files) {\n        this.setState({files:files})\n    }\n\n    notablePlayerChange(player) {\n        this.setState({\n            selectedPlayer:player})\n    }\n    notableEventChange(event) {\n        this.setState({\n            selectedEvent:event})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({playerNameError:'', tournamentUrlError: ''})\n    }\n    \n    validateInputDetailsSet() {\n        if(this.props.site === Constants.SITE_EVENT_DB){\n            if(!this.state.selectedEvent){\n                this.props.showError(\"Please select an event\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(!this.state.selectedPlayer){\n                this.props.showError(\"Please select a player\")\n                return false\n            } \n        } else if(this.props.site === Constants.SITE_LICHESS ||\n            this.props.site === Constants.SITE_CHESS_DOT_COM) {\n                if(!this.state.playerName){\n                    this.setState({\n                        playerNameError:'Please enter a username'\n                    })\n                    return false\n                } \n        } else if(this.props.site === Constants.SITE_PGN_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload a PGN file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            if(this.state.files.length === 0) {\n                this.props.showError(\"Please upload an openingtree file\")\n                return false\n            }\n        } else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            if(!this.state.tournamentUrl){\n                this.setState({\n                    tournamentUrlError:'Please enter a url'\n                })\n                return false\n            } else {\n                \n                let url = this.state.tournamentUrl.trim()\n                if(!url.startsWith(\"http\")) {\n                    url = \"https://\"+url\n                }\n                let parsedUrl = null\n                try {\n                    parsedUrl = new URL(url)\n                } catch (e) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a valid url'\n                    })\n                    return false\n                }\n                let hostname = parsedUrl.hostname\n                let tournamentSite = null;\n                if(hostname === 'lichess.org' || hostname.endsWith('.lichess.org')) {\n                    tournamentSite = Constants.SITE_LICHESS\n                } else if(hostname === 'chess.com' || hostname.endsWith('.chess.com')) {\n                    this.setState({\n                        tournamentUrlError:'chess.com tournaments are not currently supported'\n                    })\n                    return false;\n                }\n                if(!tournamentSite) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a lichess.org url'\n                    })\n                    return false;\n                }\n                let pathComponents = parsedUrl.pathname.split(\"/\")\n                let tournamentId = null\n                let tournamentType = null\n                for(let i=0;i<pathComponents.length;i++) {\n                    if(pathComponents[i]) {\n                        tournamentType = pathComponents[i]\n                        break\n                    }\n                }\n\n                for(let i=pathComponents.length-1;i>=0;i--) {\n                    if(pathComponents[i]) {\n                        tournamentId = pathComponents[i]\n                        break\n                    }\n                }\n                if(!tournamentId) {\n                    this.setState({\n                        tournamentUrlError:'Please enter a valid tournament url'\n                    })\n                    return false;\n                }\n                \n                this.selectedOnlineTournament = {\n                    tournamentSite:tournamentSite,\n                    tournamentId:tournamentId,\n                    tournamentType:tournamentType\n                \n                }\n            }\n        }\n        return true\n    }\n    finalPlayerName(source, playerName, selectedNotablePlayer) {\n        if(source === Constants.SITE_PLAYER_DB) {\n            return selectedNotablePlayer.name\n        }\n        if(source === Constants.SITE_EVENT_DB) {\n            return ''\n        }\n        if(!playerName) {\n            return playerName\n        }\n        return playerName.trim()\n    }\n    setPlayerDetails() {\n         if(this.validateInputDetailsSet()) {\n            this.props.playerDetailsChange(\n                this.finalPlayerName(\n                    this.props.site, \n                    this.state.playerName,\n                    this.state.selectedPlayer), \n                this.state.files, \n                this.state.selectedEvent, \n                this.state.selectedPlayer,\n                this.selectedOnlineTournament)\n        }\n    }\n    \n    getSummary() {\n        if(this.props.site === Constants.SITE_PLAYER_DB){\n            if(this.props.selectedPlayer && this.props.selectedPlayer.name) {\n                return <span>\n                        {getNumberIcon('done')}\n                        {this.props.selectedPlayer.profile.title}{'\\u00A0'}\n                        <b>{this.props.selectedPlayer.name}</b>\n                    </span>\n            }\n        } else if(this.props.site === Constants.SITE_LICHESS || \n            this.props.site === Constants.SITE_CHESS_DOT_COM){\n            if(this.props.playerName) {\n                return <span>{getNumberIcon('done')}User: <b>{this.props.playerName}</b></span>\n            }\n        } else if(this.props.site === Constants.SITE_PGN_FILE || \n            this.props.site === Constants.SITE_OPENING_TREE_FILE){\n            if(this.props.files.length===1) {\n                return <span>{getNumberIcon('done')}File: <b>{this.props.files[0].name}</b></span>\n            }\n            if(this.props.files.length>1) {\n                return <span>{getNumberIcon('done')}{this.props.files.length} PGN files uploaded</span>\n            }\n        } else if(this.props.site === Constants.SITE_EVENT_DB) {\n            if(this.props.selectedEvent && this.props.selectedEvent.name) {\n                return <span>{getNumberIcon('done')}{this.props.selectedEvent.name}</span>\n            }\n        }\n        else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            if(this.props.selectedOnlineTournament) {\n                return <span>{getNumberIcon('done')}Id: <b>{this.props.selectedOnlineTournament.tournamentId}</b></span>\n            }\n        }\n        return <span>{getNumberIcon(2)}{this.title(this.props.site)}</span>\n    }\n\n    title(site){\n        if(site === Constants.SITE_ONLINE_TOURNAMENTS \n            || site === Constants.SITE_EVENT_DB) {\n            return \"Tournament details\"\n        } else if(site === Constants.SITE_OPENING_TREE_FILE \n            || site === Constants.SITE_PGN_FILE) {\n                return \"File details\"\n        } \n        return \"Player details\"\n    }\n\n    launchLichessOauth() {\n        trackEvent(\n            Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessLogin\")\n        setTimeout(()=>{\n            window.location.href = \n                'https://oauth.lichess.org/oauth/authorize?response_type=code&client_id=EBXrB9R9OXpaRvOU&scope=preference:read&redirect_uri=https%3A%2F%2Flichesslogin.openingtree.com&state='+window.location.pathname\n            }, 150)\n        }\n    getLichessSelection() {\n        return <div>\n            {this.getLichessCardBody()}\n            <br/>\n            {this.getPlayerNameInput('lichess username')}\n        </div>\n    }\n\n    getLichessCardBody() {\n        if (this.props.lichessLoginState === Constants.LICHESS_STATE_PENDING) {\n            return <Card>\n                <div className=\"center\">\n                    <Spinner className=\"bigSpinner dividerMargin\" /><br/>\n                </div>\n            </Card>\n        } else if(this.props.lichessLoginState === Constants.LICHESS_FAILED_FETCH) {\n            return <Card><CardBody className=\"singlePadding\">\n            <CardTitle className=\"smallBottomMargin redColor\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> Failed to fetch login status</CardTitle>\n            <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faSync} className=\"lowOpacity smallText leftMargin2\"/>\n            <span onClick={this.props.refreshLichessStatus} className=\"smallText linkStyle leftMargin4\"> Retry fetching status</span>\n            </CardTitle>\n            <CardTitle><FontAwesomeIcon icon={faSignOutAlt} className=\"lowOpacity smallText leftMargin2\"/>\n            <span onClick={this.props.logoutOfLichess} className=\"smallText linkStyle leftMargin4\"> Logout of lichess</span>\n            </CardTitle>\n    \n                    <MaterialUIButton\n                onClick={this.launchLichessOauth}\n                variant=\"contained\"\n                color=\"default\"\n                className=\"mainButton\" disableElevation\n                startIcon={<LockOpen />}\n                >\n                    LOGIN AGAIN\n                </MaterialUIButton>\n            </CardBody></Card>\n        } else if (this.props.lichessLoginState === Constants.LICHESS_LOGGED_IN && this.props.lichessLoginName) {\n            return <Card>\n                <CardBody className=\"singlePadding\">\n                    <CardTitle>\n                        <FontAwesomeIcon icon={faCheck} className=\"lowOpacity greenColor\"/> Logged in as\n                        <b> {this.props.lichessLoginName}</b>\n                        \n                    </CardTitle>\n                    \n                    <MaterialUIButton\n                        onClick={this.props.logoutOfLichess}\n                        variant=\"contained\"\n                        color=\"default\"\n                        className=\"mainButton\" disableElevation\n                        startIcon={<ExitToApp />}\n                        >\n                            LOGOUT\n                    </MaterialUIButton>\n                </CardBody>\n            </Card>\n        }\n        return <Card><CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> Speed up tree building (optional)</CardTitle>\n        <CardText className=\"smallText\">\n            Lichess allows much faster download of games if you login. You can learn more about this <a href = 'https://lichess.org/api#operation/apiGamesUser' rel=\"noopener noreferrer\" target=\"_blank\">here</a>. \n            Recommended for viewing your own games or when your opponent has lots of games.\n        </CardText>\n        <MaterialUIButton\n                onClick={this.launchLichessOauth}\n                variant=\"contained\"\n                color=\"default\"\n                className=\"mainButton\" disableElevation\n                startIcon={<LockOpen />}\n                >\n                    LOGIN TO LICHESS\n                </MaterialUIButton>\n        </CardBody>\n        </Card>\n    }\n\n    getChessComSelection() {\n        return this.getPlayerNameInput('chess.com username')\n    }\n\n    getPlayerNameInput(label, helperText) {\n        return <TextField\n            className=\"playernameField\" name=\"playerName\" id=\"playerNameTextBox\" \n            margin=\"dense\" onChange={this.editPlayerName.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.playerName}\n            helperText={this.state.playerNameError? this.state.playerNameError:helperText}\n            error={this.state.playerNameError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    getOnlineTournamentSelection() {\n        return <div>\n            {this.getOnlineTournamentCard()}\n            <br/>\n            {this.getOnlineTournamentInput('Enter tournament url', 'eg. https://lichess.org/tournament/QlooVt7W')}\n        </div>\n    }\n    getOnlineTournamentCard(){\n        return <Card>\n        <CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n        <CardText className=\"smallText\">\n            You can load all of the games of a lichess tournament by copying the  url from your address bar on those sites and pasting it below.\n            <br/><br/>\n            <b>Why is chess.com not supported?</b>\n            <br/>chess.com API has a few bugs in returning tournament games so we are not able to support them currently. Bugs have been reported to chess.com.\n            \n        </CardText>\n        </CardBody>\n        </Card>\n    }\n    \n\n    getOnlineTournamentInput(label, helperText) {\n        return <TextField\n            className=\"urlField\" name=\"onlineTournament\" id=\"onlineTournamentTextBox\" \n            margin=\"dense\" onChange={this.editTournamentUrl.bind(this)}\n            label={label} variant=\"outlined\" value={this.state.tournamentUrl}\n            helperText={this.state.tournamentUrlError? this.state.tournamentUrlError:helperText}\n            error={this.state.tournamentUrlError?true:false} onKeyUp={this.playerNameKeyUp.bind(this)}/>\n    }\n\n    playerNameKeyUp(evt) {\n        if(evt.keyCode === 13) { // enter key pressed\n            this.setPlayerDetails()\n        }\n    }\n    getGoatDBSelection(){\n        return <NotableChessGames \n            list={this.props.notablePlayers} \n            placeholder=\"Select a player\"\n            onChange={this.notablePlayerChange.bind(this)}\n            selectedDetail={this.state.selectedPlayer}/>\n    }\n    getGoatDBEventSelection(){\n        return <NotableChessGames \n            list={this.props.notableEvents} \n            placeholder=\"Select an event\"\n            onChange={this.notableEventChange.bind(this)}\n            selectedDetail={this.state.selectedEvent}/>\n    }\n\n    getPgnFileSelection() {\n        return <div><Dropzone filesChange={this.filesChange.bind(this)} filesLimit={10}\n        dropzoneText=\"Drag and drop up to 10 pgn files here or click here to select files\"\n                />\n                {this.getPlayerNameInput('player name in PGN', 'Leave blank to load all games')}\n                </div>\n    }\n\n    getOpeningTreeSelection() {\n        return <div>\n            <Card>\n                <CardBody className=\"singlePadding\">\n                <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> How it works</CardTitle>\n                <CardText className=\"smallText\">\n                    If you plan to revisit the same player, you can save a <b>.tree</b> file locally by loading a tree and then clicking <i>\"Save .tree file\"</i>.\n                    To reload the same tree, drop the <b>.tree</b> file in the dropzone below.\n                </CardText>\n                </CardBody>\n                </Card><br/>\n            <Dropzone filesChange={this.filesChange.bind(this)} filesLimit={1}\n                    dropzoneText=\"Drag and drop openingtree save file here or click here to select a file\"\n                />\n        </div>\n    }\n\n    getInputsToShow() {\n        if(this.props.site === Constants.SITE_PGN_FILE) {\n            return this.getPgnFileSelection()\n        } else if (this.props.site === Constants.SITE_LICHESS) {\n            return this.getLichessSelection()\n        } else if (this.props.site === Constants.SITE_CHESS_DOT_COM) {\n            return this.getChessComSelection()\n        } else if (this.props.site === Constants.SITE_EVENT_DB) {\n            return this.getGoatDBEventSelection()\n        } else if (this.props.site === Constants.SITE_PLAYER_DB) {\n            return this.getGoatDBSelection()\n        } else if(this.props.site === Constants.SITE_OPENING_TREE_FILE) {\n            return this.getOpeningTreeSelection()\n        } else if(this.props.site === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return this.getOnlineTournamentSelection()\n        }\n        return <div/>\n    }\n\n    render() {\n        return <Accordion expanded={this.props.expandedPanel === 'user'}\n                TransitionComponent={Collapse}\n                TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n                onChange={this.props.handleExpansionChange} \n                disabled={this.props.site===''}>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>{this.getSummary()}</AccordionSummary>\n                <AccordionDetails>\n                        {this.getInputsToShow()}\n                </AccordionDetails>\n                <Divider />\n                <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.setPlayerDetails.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions></Accordion>\n            \n    }\n}","import React from 'react'\nimport {getNumberIcon} from './Common'\nimport { Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {Accordion} from './Common'\nimport * as Constants from '../../app/Constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFlagCheckered, faChessKing, faDiceThree, faMountain , faHouseDamage} from '@fortawesome/free-solid-svg-icons'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider';\n\n\nexport default class Source extends React.Component {\n\n\n    getVariantOption(variant, addNumber) {\n        return <span>\n            {addNumber?getNumberIcon('done', addNumber):null}\n            <FontAwesomeIcon icon={this.getVariantIcon(variant)} /> <span> {this.getVariantText(variant)} </span>\n        </span>\n    }\n\n    getVariantText(variant) {\n        if (variant === Constants.VARIANT_RACING_KINGS) {\n            return \"Racing kings\"\n        } else if (variant === Constants.VARIANT_THREE_CHECK) {\n            return \"Three check\"\n        } else if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n            return \"King of the hill\"\n        } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n            return \"Crazyhouse\"\n        } \n        return \"Standard rules\" \n    }\n\n    getVariantIcon(variant) {\n        if (variant === Constants.VARIANT_RACING_KINGS) {\n            return faFlagCheckered\n        } else if (variant === Constants.VARIANT_THREE_CHECK) {\n            return faDiceThree\n        } else if (variant === Constants.VARIANT_KING_OF_THE_HILL) {\n            return faMountain\n        } else if (variant === Constants.VARIANT_CRAZYHOUSE) {\n            return faHouseDamage\n        } \n        return faChessKing\n    }\n    changeLink(){\n        return this.props.expandedPanel === 'variant'?null:<span className=\"smallText\" style={{\"verticalAlign\":\"text-bottom\"}}>&nbsp;[<span className=\"linkStyle\">change</span>]</span>\n    }\n    getVariantRadio(source) {\n        return <FormControlLabel \n                className=\"sitelabel\" \n                value={source} \n                control={<Radio color=\"primary\" />} \n                label={this.getVariantOption(source)} />\n    }\n    continue(){\n        this.props.variantChange(this.props.variant)\n    }\n    setVariant(event){\n        let newVariant = event.target.value\n        this.props.variantChange(newVariant)\n    }\n\n    render() {\n        return <Accordion TransitionComponent={Collapse}\n            TransitionProps={{timeout:Constants.LOADER_ANIMATION_DURATION_MS}}\n            expanded={this.props.expandedPanel === 'variant'}\n            onChange={this.props.handleExpansionChange}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n            >\n                <div>\n                    {this.getVariantOption(this.props.variant, true)}\n                </div>\n                <div>\n             {this.changeLink()}\n            </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <RadioGroup onChange={this.setVariant.bind(this)} value={this.props.variant}>\n                {this.getVariantRadio(Constants.VARIANT_STANDARD)}\n                {this.getVariantRadio(Constants.VARIANT_CRAZYHOUSE)}\n                {this.getVariantRadio(Constants.VARIANT_THREE_CHECK)}\n                {this.getVariantRadio(Constants.VARIANT_KING_OF_THE_HILL)}\n                {this.getVariantRadio(Constants.VARIANT_RACING_KINGS)}\n               </RadioGroup>\n            </AccordionDetails>\n            <Divider />\n\n            <AccordionActions>\n                    <MaterialUIButton size=\"small\" color=\"primary\" onClick={this.continue.bind(this)}>Continue</MaterialUIButton>\n                </AccordionActions>\n        </Accordion>\n        \n    }\n}","import React from 'react'\nimport { createSubObjectWithProperties, getTimeframeSteps } from '../../app/util'\nimport * as Constants from '../../app/Constants'\nimport { trackEvent } from '../../app/Analytics'\nimport Source from './Source'\nimport User from './User'\nimport Filters from './Filters'\nimport Actions from './Actions'\nimport Variants from './Variants'\nimport request from 'request'\nimport * as SitePolicy from '../../app/SitePolicy'\nimport cookieManager from '../../app/CookieManager'\n\nexport default class PGNLoader extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let selectedSite = new URLSearchParams(window.location.search).get(\"source\")\n\n        this.state = {\n            playerName: '',\n            site: selectedSite?selectedSite:'',\n            playerColor: this.props.settings.playerColor,\n            isAdvancedFiltersOpen: false,\n            isGamesSubsectionOpen: false,\n            expandedPanel: selectedSite?'user':'source',\n            notablePlayers:null,\n            notableEvents:null,\n            files:[],\n            selectedNotableEvent:{},\n            selectedNotablePlayer:{},\n            lichessLoginState: Constants.LICHESS_NOT_LOGGED_IN,\n            lichessLoginName: null\n\n        }\n        if(selectedSite === Constants.SITE_LICHESS) {\n            this.fetchLichessLoginStatus()\n        }\n        this.timeframeSteps = getTimeframeSteps()\n        this.state[Constants.FILTER_NAME_SELECTED_TIMEFRAME] = [0, this.timeframeSteps.length - 1]\n        this.state[Constants.FILTER_NAME_DOWNLOAD_LIMIT] = Constants.MAX_DOWNLOAD_LIMIT\n        this.state[Constants.TIME_CONTROL_ULTRA_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BULLET] = true\n        this.state[Constants.TIME_CONTROL_BLITZ] = true\n        this.state[Constants.TIME_CONTROL_RAPID] = true\n        this.state[Constants.TIME_CONTROL_CLASSICAL] = true\n        this.state[Constants.TIME_CONTROL_CORRESPONDENCE] = true\n        this.state[Constants.TIME_CONTROL_DAILY] = true\n        this.state[Constants.FILTER_NAME_RATED] = \"all\"\n        this.state[Constants.FILTER_NAME_ELO_RANGE] = [0, Constants.MAX_ELO_RATING]\n    }\n\n\n    advancedFilters() {\n        return createSubObjectWithProperties(this.state,\n            [Constants.TIME_CONTROL_ULTRA_BULLET, Constants.TIME_CONTROL_BULLET,\n            Constants.TIME_CONTROL_BLITZ, Constants.TIME_CONTROL_RAPID,\n            Constants.TIME_CONTROL_CORRESPONDENCE, Constants.TIME_CONTROL_DAILY,\n            Constants.TIME_CONTROL_CLASSICAL, Constants.FILTER_NAME_RATED,\n            Constants.FILTER_NAME_SELECTED_TIMEFRAME, Constants.FILTER_NAME_DOWNLOAD_LIMIT,\n            Constants.FILTER_NAME_ELO_RANGE])\n    }\n\n\n    handleExpansionChange(panel) {\n        return (event, newExpanded) => {\n            this.setState({ expandedPanel: newExpanded ? panel : false });\n        };\n    }\n\n    exportOpeningTreeObject(){\n        return {\n            header:{\n                version:2,// current openingtree file version. used to check compatibility of files\n                timestamp:Math.floor(Date.now() / 1000),\n                gamesProcessed:this.props.gamesProcessed,\n                settings:this.props.settings,\n                playerName:this.state.playername,\n                site: this.state.site,\n                advancedFilters:this.advancedFilters(),\n                variant:this.props.variant\n            },\n            arrays: [[...this.props.openingGraph.graph.nodes.entries()],\n                        [...this.props.openingGraph.graph.pgnStats]]\n        }\n    }\n\n    importOpeningTreeObject(openingTreeSave) {\n        let saveVersion = 1;\n        if(openingTreeSave.header.version) {\n            saveVersion = openingTreeSave.header.version\n        }\n        if(saveVersion < Constants.OPENING_TREE_FILE_CURRENT_VERSION) {\n            this.props.showError(\"This is an old format of openingtree file.\", null, \n                \"You can try loading it by visiting the old website\", Constants.ERROR_ACTION_VISIT_OLD_SITE)\n            return false\n        }\n        this.setState({\n            ...openingTreeSave.header.advancedFilters,\n            playerColor:openingTreeSave.header.settings.playerColor,\n            site:openingTreeSave.header.site,\n            playerName:openingTreeSave.header.settings.playerName,\n        })\n        this.props.openingGraph.setEntries(openingTreeSave.arrays[0], openingTreeSave.arrays[1])\n        this.props.importCallback({\n            settings:openingTreeSave.header.settings,\n            gamesProcessed:openingTreeSave.header.gamesProcessed,\n            openingGraph:this.props.openingGraph,\n            variant:openingTreeSave.header.variant\n        })\n        return true\n    }\n\n    playerDetailsChange(playerName, files, selectedNotableEvent, selectedNotablePlayer, selectedOnlineTournament) {\n        this.setState({\n            playerName: playerName,\n            expandedPanel:SitePolicy.isFilterPanelEnabled(this.state.site, playerName, selectedNotablePlayer)?'filters':'',\n            files:files,\n            selectedNotableEvent:selectedNotableEvent,\n            selectedNotablePlayer:selectedNotablePlayer,\n            playerColor:'',\n            selectedOnlineTournament:selectedOnlineTournament\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"PlayerNameSaved\")\n    }\n    fetchGOATGames(url, callback){\n        request.get(url, (error, response) =>{\n            if(error) {\n                this.props.showError(\"Could not fetch player list. Failed to connect to DB.\")\n                callback([])\n                return \n            }\n            let gamesDetails\n            try{\n                gamesDetails = JSON.parse(response.body).list\n            } catch (e) {\n                console.log(e)\n            }\n            if(!gamesDetails) {\n                this.props.showError(\"Failed to load games.\")\n                callback([])\n            } else {\n                callback(gamesDetails)\n            }\n        })\n    }\n\n\n\n    siteChange(newSite) {\n        if(newSite === Constants.SITE_PLAYER_DB && !this.state.notablePlayers) {\n            this.fetchGOATGames('https://goatchess.github.io/list.json', (gamesDetails)=>{\n                this.setState({notablePlayers:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_EVENT_DB && !this.state.notableEvents) {\n            this.fetchGOATGames('https://goatevents.github.io/list.json', (gamesDetails)=>{\n                this.setState({notableEvents:gamesDetails})\n            })\n        }\n        if(newSite === Constants.SITE_LICHESS) {\n            this.fetchLichessLoginStatus()\n        }\n\n        this.setState({ site: newSite, expandedPanel:'user'})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"ChangeSite\", newSite)\n    }\n    fetchLichessLoginStatus(){\n        let lichessAccessToken = cookieManager.getLichessAccessToken()\n        if(lichessAccessToken) {\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessTokenFound\")\n\n            this.setState({lichessLoginState:Constants.LICHESS_STATE_PENDING})\n            \n            request.get(\"https://lichess.org/api/account\", {timeout:5000, auth:{bearer:cookieManager.getLichessAccessToken()}}, (error, response)=>{\n                if(!error && response) {\n                    let responseObj = JSON.parse(response.body) \n                    if(responseObj && responseObj.username) {\n                        this.setState({\n                            lichessLoginState:Constants.LICHESS_LOGGED_IN,\n                            lichessLoginName:responseObj.username\n                        })\n                        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessFetchSuccess\")\n                        return\n                    } \n                } \n                trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessFetchFailed\")\n                this.setState({lichessLoginState:Constants.LICHESS_FAILED_FETCH})\n            })\n        } else {\n            trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessNoToken\")\n        }\n    }\n    logoutOfLichess() {\n        cookieManager.deleteLichessAccessToken()\n        this.setState({\n            lichessLoginState:Constants.LICHESS_NOT_LOGGED_IN,\n            lichessLoginName:''\n        })\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"lichessLogout\")\n    }\n\n    filtersChange(filters) {\n        this.setState({...filters, expandedPanel:''})\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"FitlersSaved\", this.state.site)\n    }\n    variantChange(newVariant) {\n        this.setState({expandedPanel:'source'})\n        this.props.variantChange(newVariant)\n        trackEvent(Constants.EVENT_CATEGORY_PGN_LOADER, \"VariantChange\", newVariant)\n    }\n\n    render() {\n        return <div><div className=\"pgnloadersection\">\n            <Variants expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('variant').bind(this)}\n                variantChange={this.variantChange.bind(this)} variant={this.props.variant}/>\n            <Source expandedPanel={this.state.expandedPanel}\n                handleExpansionChange={this.handleExpansionChange('source').bind(this)}\n                site={this.state.site} siteChange={this.siteChange.bind(this)}\n                variant={this.props.variant}/>\n            <User expandedPanel={this.state.expandedPanel} playerName={this.state.playerName}\n                handleExpansionChange={this.handleExpansionChange('user').bind(this)} \n                showError={this.props.showError} files={this.state.files} notablePlayers={this.state.notablePlayers}\n                notableEvents={this.state.notableEvents} site={this.state.site} playerDetailsChange={this.playerDetailsChange.bind(this)}\n                pgnUrl={this.state.pgnUrl} selectedPlayer={this.state.selectedNotablePlayer} selectedEvent={this.state.selectedNotableEvent}\n                lichessLoginState={this.state.lichessLoginState} lichessLoginName={this.state.lichessLoginName}\n                logoutOfLichess={this.logoutOfLichess.bind(this)} refreshLichessStatus={this.fetchLichessLoginStatus.bind(this)}\n                selectedOnlineTournament={this.state.selectedOnlineTournament}\n            />\n            <Filters expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor}\n                handleExpansionChange={this.handleExpansionChange('filters').bind(this)}\n                site={this.state.site} playerName={this.state.playerName} advancedFilters={this.advancedFilters()}\n                timeframeSteps={this.timeframeSteps} filtersChange={this.filtersChange.bind(this)}\n                selectedNotablePlayer={this.state.selectedNotablePlayer} />\n            </div>\n            <Actions expandedPanel={this.state.expandedPanel} playerColor={this.state.playerColor} files={this.state.files}\n                playerName={this.state.playerName} site={this.state.site} advancedFilters={this.advancedFilters()}\n                notify={this.props.notify} showError={this.props.showError} onChange={this.props.onChange}\n                setDownloading={this.props.setDownloading} clear={this.props.clear} isDownloading={this.props.isDownloading}\n                switchToMovesTab={this.props.switchToMovesTab} gamesProcessed={this.props.gamesProcessed} \n                selectedNotablePlayer={this.state.selectedNotablePlayer} selectedNotableEvent={this.state.selectedNotableEvent}\n                exportOpeningTreeObject={this.exportOpeningTreeObject.bind(this)} showInfo={this.props.showInfo}\n                importOpeningTreeObject={this.importOpeningTreeObject.bind(this)} selectedOnlineTournament={this.state.selectedOnlineTournament}\n                variant={this.props.variant}/>\n        </div>\n    }\n\n}","import React from 'react'\nimport {Button} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRetweet, faTrashAlt, faFastBackward, faDesktop } from '@fortawesome/free-solid-svg-icons'\nimport {Container, Row, Col} from 'reactstrap'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\n\nexport default class SettingsView extends React.Component {\n    constructor(props){\n        super(props)\n        window.addEventListener(\"keydown\",this.keyHandler.bind(this))\n  \n    }\n    keyHandler(e){\n        if(e.srcElement && e.srcElement.tagName === 'INPUT') {\n            return \n        }\n        switch(e.keyCode) {\n          case 70: // F key\n          this.toggle('orientation')()\n          break\n          default:\n            break\n\n        }\n      }\n    toggle(eventName){\n        return (()=> {\n            let newValue = this.props.settings[eventName] === Constants.PLAYER_COLOR_WHITE ? Constants.PLAYER_COLOR_BLACK:Constants.PLAYER_COLOR_WHITE\n            this.props.onChange(eventName, newValue)\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"ChangeOrientation\")\n        })\n    }\n    analyse() {\n        window.open(`https://www.lichess.org/analysis/standard/${this.props.fen}`, '_blank');\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"AnalyzeGame\")\n\n    }\n    resetAction() {\n        this.props.reset()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Reset\")\n    }\n    clearAction() {\n        this.props.clear()\n        trackEvent(Constants.EVENT_CATEGORY_CONTROLS, \"Clear\")\n    }\n\n    render() {\n        return <div>\n            <Container>\n                <Row sm=\"12\">\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.toggle('orientation')} color=\"\"><h3><FontAwesomeIcon icon={faRetweet} /></h3> Flip board</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.clearAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faTrashAlt} /></h3> Clear games</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.resetAction.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faFastBackward} /></h3> Starting position</Button>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Button className=\"settingButton\" onClick = {this.analyse.bind(this)} color=\"\"><h3><FontAwesomeIcon icon={faDesktop} /></h3> Computer analysis</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter, TextField } from '@material-ui/core';\nimport React from 'react'\nimport {getPerformanceDetails} from '../app/util'\nimport {copyText} from './loader/Common'\n\nexport default class ReportControls extends React.Component {\n    eatClicks(e) {\n        e.stopPropagation()\n    }\n\n    copyFen() {\n        copyText(\"fenField\")/* Get the text field */\n        /* Alert the copied text */\n        this.props.showInfo(\"FEN copied\");\n    }\n\n    getFenField() {\n        return this.props.simplifiedView?null:\n            <div className=\"fenDiv\">\n            <TextField\n                id=\"fenField\"\n                multiline\n                label=\"FEN\"\n                rowsMax=\"2\"\n                value={this.props.fen} \n                inputProps={{\n                    style: {fontSize: 12},\n                    spellCheck: false,\n                  }} \n                  variant=\"outlined\"\n                className=\"fenField\"\n                margin=\"dense\"\n                onClick = {this.copyFen.bind(this)}\n                /></div>\n    }\n\n      \n    render() {\n        let moveDetails = this.props.moveDetails\n        if(!moveDetails.hasData) {\n            return <div>{this.getFenField()}<div className = \"infoMessage\" >No data to show. Please enter a lichess or chess.com user name in the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and click \"Load\"</div>\n                </div>\n        }\n        let performanceDetails = {}\n        if(this.props.isOpen) {\n            performanceDetails = getPerformanceDetails(moveDetails.totalOpponentElo, \n                                                        moveDetails.averageElo,\n                                                        moveDetails.whiteWins, \n                                                        moveDetails.draws, \n                                                        moveDetails.blackWins, \n                                                        this.props.settings.playerColor)\n        } \n\n        return <div>\n            {this.getFenField()}\n            <Table onClick={this.eatClicks}>\n            {!performanceDetails.performanceRating || (isNaN(performanceDetails.performanceRating) || !this.props.settings.playerName)?null:            <TableHead className={`performanceRatingRow${this.props.simplifiedView?\" performanceHeader\":\"\"}`}><TableRow>\n                <TableCell className=\"performanceRatingRow\"><b>Performance</b></TableCell>\n                <TableCell className=\"performanceRatingRow\"><b>{performanceDetails.performanceRating}</b></TableCell>\n                </TableRow></TableHead>}\n            <TableBody>\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Results</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.results}</TableCell>\n            </TableRow>\n            {(isNaN(performanceDetails.averageOpponentElo) || performanceDetails.averageOpponentElo <= 0 || !this.props.settings.playerName)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg opponent</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageOpponentElo}</TableCell>\n            </TableRow>}\n            {(isNaN(performanceDetails.averageElo))?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Avg Elo</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.averageElo}</TableCell>\n            </TableRow>}\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Score</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.score}</TableCell>\n            </TableRow>\n            {((this.props.simplifiedView || isNaN(performanceDetails.averageElo)) || !this.props.settings.playerName)?null:\n            <TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Rating change</TableCell>\n                <TableCell className=\"performanceRatingRow\">{performanceDetails.ratingChange}</TableCell>\n            </TableRow>\n            }\n            {(this.props.settings.playerName && !this.props.simplifiedView && moveDetails.bestWinElo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Best win</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.bestWinElo} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.bestWinGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(this.props.settings.playerName && !this.props.simplifiedView && moveDetails.worstLossElo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Worst loss</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.worstLossElo} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.worstLossGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(!this.props.simplifiedView && moveDetails.longestGameInfo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Longest game</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.longestGameInfo.numberOfPlys} Plys <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.longestGameInfo)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            {(!this.props.simplifiedView && moveDetails.shortestGameInfo)?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Shortest game</TableCell>\n                <TableCell className=\"performanceRatingRow\">{moveDetails.shortestGameInfo.numberOfPlys} Plys <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.shortestGameInfo)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n\n            {moveDetails.lastPlayedGame?<TableRow className=\"performanceRatingRow\">\n                <TableCell className=\"performanceRatingRow\">Last played</TableCell>\n                <TableCell className=\"performanceRatingRow\">{this.removeQuestionMarksFromDate(moveDetails.lastPlayedGame.date)} <FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(moveDetails.lastPlayedGame)} icon={faExternalLinkAlt}/></TableCell>\n            </TableRow>:null}\n            </TableBody>\n            {!this.props.reportFooter?null:\n            <TableFooter>\n                <TableRow>\n                    <TableCell colSpan=\"2\">{this.props.reportFooter}</TableCell>\n                </TableRow>\n            </TableFooter>\n            }\n        </Table></div>\n    }\n\n    removeQuestionMarksFromDate(date) {\n        if(!date || date.indexOf('?') === -1) {\n            return date\n        }\n        return date.slice(0, date.indexOf('.'))\n    }\n}","export function playerDetails(name, elo) {\n    return `${name}${elo?`(${elo})`:''}`\n}\n","import React from 'react'\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button\n} from 'reactstrap'\nimport Switch from '@material-ui/core/Switch';\nimport {\n    FormControlLabel\n} from '@material-ui/core'\nimport {\n    ToggleButtonGroup,\n    ToggleButton\n} from '@material-ui/lab'\nimport * as Constants from '../../app/Constants'\n\nexport default class MovesSettings extends React.Component {\n    constructor(props) {\n        super(props)\n        let mSettings = Object.assign({},this.props.settings.movesSettings)\n        mSettings.openingBookType = this.getTransformedBookType(mSettings.openingBookType)\n        this.state={\n            movesSettings: mSettings\n        }\n    }\n\n    updateMoveSetting(key) {\n        return (e, value) => {\n            if(Array.isArray(value) && value.length <1) {\n                return\n            }\n            let newMovesSettings = Object.assign({},this.state.movesSettings)\n            newMovesSettings[key] = value\n            this.setState({\n                movesSettings:newMovesSettings\n            })\n        }\n    }\n\n    cancel() {\n        //reset to original settings\n        this.setState({movesSettings: this.props.settings.movesSettings})\n        this.props.toggle()\n    }\n\n    set() {\n        //reset to  new settings\n        this.props.settingsChange('movesSettings', this.state.movesSettings)\n        this.props.toggle()\n    }\n\n    render() {\n        return <Modal isOpen={this.props.isOpen} toggle={this.cancel.bind(this)}>\n            <ModalHeader toggle={this.cancel.bind(this)}>Opening book settings</ModalHeader>\n            <ModalBody>\n                <div className=\"littlePaddingTop\">{this.getOpeningBookType()}</div>\n                {this.state.movesSettings.openingBookType === Constants.OPENING_BOOK_TYPE_LICHESS?\n                <div className=\"littlePaddingTop\">{this.getOpeningBookRating()}</div>\n                :null}   \n                {this.state.movesSettings.openingBookType === Constants.OPENING_BOOK_TYPE_LICHESS?\n                <div className=\"littlePaddingTop\">{this.getOpeningBookTimeControls()}</div>\n                :null}   \n                <div className=\"littlePaddingTop\">{this.getIndicatorSwitch(\"openingBookWinsIndicator\", \"Book indicators\")}</div>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"link\" onClick={this.cancel.bind(this)}>Cancel</Button>\n            <Button color=\"primary\" onClick={this.set.bind(this)}>Set</Button>\n\n            </ModalFooter>\n        </Modal>\n    }\n\n    getIndicatorSwitch(name, label) {\n        return <div><FormControlLabel\n            control={\n                <Switch\n                    checked={this.state.movesSettings[name]}\n                    name={name}\n                    color=\"primary\"\n                />\n            }\n            onChange={this.updateMoveSetting(name)}\n            label={label}\n      /></div>\n    }\n\n    mastersBookAvailable() {\n        // masters book is only available for standard mode\n        return this.props.variant === Constants.VARIANT_STANDARD\n    }\n\n    getTransformedBookType(value){\n        //if masters book is not available, use lichess book\n        if(value === Constants.OPENING_BOOK_TYPE_MASTERS\n            && !this.mastersBookAvailable()) {\n            return Constants.OPENING_BOOK_TYPE_LICHESS\n        }\n        return value\n    }\n\n    getOpeningBookType() {\n        return <div>Book type<br/><ToggleButtonGroup size=\"small\" exclusive={true} value={this.getTransformedBookType(this.state.movesSettings.openingBookType)} onChange={this.updateMoveSetting('openingBookType')} aria-label=\"book type\">\n            <ToggleButton value={Constants.OPENING_BOOK_TYPE_OFF} aria-label={Constants.OPENING_BOOK_TYPE_OFF}>\n                Off\n            </ToggleButton> {\n                this.mastersBookAvailable()?\n                <ToggleButton value={Constants.OPENING_BOOK_TYPE_MASTERS} aria-label={Constants.OPENING_BOOK_TYPE_MASTERS}>\n                    Masters\n                </ToggleButton>\n                :null\n            }\n            <ToggleButton value={Constants.OPENING_BOOK_TYPE_LICHESS} aria-label={Constants.OPENING_BOOK_TYPE_LICHESS}>\n                Lichess\n            </ToggleButton>\n        </ToggleButtonGroup></div>\n    }\n    getOpeningBookRating() {\n        return <div>Rating<br/><ToggleButtonGroup size=\"small\" value={this.state.movesSettings.openingBookRating} onChange={this.updateMoveSetting('openingBookRating')} aria-label=\"text formatting\">\n            <ToggleButton value=\"1600\" aria-label=\"1600\">\n                1600\n            </ToggleButton>\n            <ToggleButton value=\"1800\" aria-label=\"1800\">\n                1800\n            </ToggleButton>\n            <ToggleButton value=\"2000\" aria-label=\"2000\">\n                2000\n            </ToggleButton>\n            <ToggleButton value=\"2200\" aria-label=\"2200\">\n                2200\n            </ToggleButton>\n            <ToggleButton value=\"2500\" aria-label=\"2500\">\n                2500\n            </ToggleButton>\n        </ToggleButtonGroup></div>\n    }\n\n    getOpeningBookTimeControls() {\n        return <div>Time controls<br/><ToggleButtonGroup size=\"small\" value={this.state.movesSettings.openingBookTimeControls} onChange={this.updateMoveSetting('openingBookTimeControls')} aria-label=\"text formatting\">\n            <ToggleButton value=\"bullet\" aria-label=\"bullet\">\n            Bullet\n            </ToggleButton>\n            <ToggleButton value=\"blitz\" aria-label=\"blitz\">\n            Blitz\n            </ToggleButton>\n            <ToggleButton value=\"rapid\" aria-label=\"rapid\">\n            Rapid\n            </ToggleButton>\n            <ToggleButton value=\"classical\" aria-label=\"classical\">\n            Classical\n            </ToggleButton>\n        </ToggleButtonGroup></div>\n    }\n\n}\n","import React from 'react'\nimport {Progress, Popover } from \"reactstrap\"\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableFooter } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faInfoCircle, faExclamationTriangle, faWrench } from '@fortawesome/free-solid-svg-icons'\nimport ReportControls from '../ReportControls'\nimport {Container, Row, Col} from 'reactstrap'\nimport \"react-step-progress-bar/styles.css\";\nimport {trackEvent} from '../../app/Analytics'\nimport * as Constants from '../../app/Constants'\nimport { ProgressBar,Step } from \"react-step-progress-bar\";\nimport {playerDetails} from './MovesCommon'\nimport {simplifyCount} from '../../app/util'\nimport MovesSettings from './MovesSettings'\n\nexport default class MovesTable extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            openPerformanceIndex: null,\n            moveSettingsOpen:false\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.turnColor !== this.props.turnColor) {\n            this.setState({\n                openPerformanceIndex: null,\n            })\n        }\n    }\n\n    move(san) {\n        return () => {\n            this.props.onMove(san)\n            trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, this.props.clickedEventName)\n        }\n    }\n\n    toggleMovesSettings(){\n        this.setState({moveSettingsOpen:!this.state.moveSettingsOpen})\n    }\n\n    togglePerformancePopover(moveIndex) {\n        return (e) => {\n            if(this.state.openPerformanceIndex !== null) {\n                this.setState({openPerformanceIndex:null})\n            } else {\n                this.setState({openPerformanceIndex: moveIndex})\n            }\n            e.stopPropagation()\n        }\n    }\n    \n    compareClicked(san){\n        return (e)=>{\n            e.stopPropagation()\n            this.props.compareToClicked(san)\n        }\n    }\n\n    compareScores(currMove) {\n        let compareTo = currMove.compareTo\n        if(!compareTo) {\n            return null\n        }\n        let values = [compareTo.bookScore, compareTo.userScore]\n        return (\n            <ProgressBar\n              percent={0}\n              stepPositions={values}\n            >\n                {this.getIndicator(\"./images/book.png\", \"12\", \"12\", \n                    this.constructAlt(this.props.compareToAlt,values),\n                    this.compareClicked(currMove.san))}\n                {this.getIndicator(\"./images/user.png\", \"12\", \"12\", \n                    this.constructAlt(this.props.compareToAlt,values),\n                    this.compareClicked(currMove.san))}\n            </ProgressBar>\n          )\n    }\n\n    compareProgress(currMove){\n        let compareTo = currMove.compareTo\n        if(!compareTo) {\n            return null\n        }\n        return (\n            <ProgressBar\n              percent={0}\n              stepPositions={compareTo.values}\n            >\n                {this.getIndicator(\"./images/arrow-white.png\", \"20\", \"16\", \n                    this.constructAlt(this.props.compareToAlt,compareTo.values),\n                    this.compareClicked(currMove.san))}\n                {this.getIndicator(\"./images/arrow-black.png\", \"18\", \"14\", \n                    this.constructAlt(this.props.compareToAlt,compareTo.values),\n                    this.compareClicked(currMove.san))}\n            </ProgressBar>\n          )\n    }\n    constructAlt(altTitle, steps) {\n        let white = Math.round(steps[0])\n        let draws = Math.round(steps[1])-white\n        let black = 100-white-draws\n        return `${altTitle} \\nWhite wins ${white}% \\nDraws ${draws}% \\nBlack wins ${black}%`\n    }\n    //&#013;\n\n    getIndicator(src, height, width, alt, click) {\n        return <Step transition=\"scale\">\n            {({ accomplished }) => (\n            <img onClick = {click}\n                alt={alt}\n                title={alt}\n                className=\"pointerExternalLink\"\n                width={width}\n                height={height}\n                src={src}\n            />\n            )}\n          </Step>\n    }\n\n    getPopover(moveIndex) {\n        let performancePopoverOpen = this.state.openPerformanceIndex === moveIndex\n        let openMove = this.props.movesToShow[moveIndex]\n\n        return <Popover trigger=\"hover\" placement=\"right\" isOpen={performancePopoverOpen} target={`p${this.props.namespace}${moveIndex}`} toggle={this.togglePerformancePopover(moveIndex)}>\n                <ReportControls moveDetails={openMove.details} simplifiedView={true} \n                isOpen = {performancePopoverOpen} launchGame={this.props.launchGame} \n                settings={this.props.settings} reportFooter ={this.reportFooter(moveIndex)}/>\n            </Popover>\n    }\n\n    reportFooter(moveIndex) {\n        let currMove = this.props.movesToShow[moveIndex]\n\n        if(this.getTranspositionWarningLevel(moveIndex)!=='none') {\n            return <div>{this.getInfoIcon(moveIndex)}<b> This move has transpositions</b> <div>{currMove.san} has been played only {currMove.moveCount} times but the resulting position has appeared {currMove.details.count} times through other move orders.</div></div>\n        }\n    }\n\n    getTranspositionWarningLevel(moveIndex){\n        let currMove = this.props.movesToShow[moveIndex]\n        let targetCount = currMove.details.count\n        let difference = targetCount - currMove.moveCount\n        if (difference>0) {\n            if(difference>10 && difference/targetCount>0.1) {\n                return \"warning\"\n            } else {\n                return \"info\"\n            }\n        }\n        return \"none\"\n    }\n\n    render() {\n        let hasMoves = (this.props.movesToShow && this.props.movesToShow.length>0)\n        return <Table>\n            {hasMoves?\n        <TableHead>\n        <TableRow>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Move</b></TableCell>\n            <TableCell size=\"small\" className=\"smallCol\"><b>Games</b></TableCell>\n            <TableCell><b>Results</b><FontAwesomeIcon \n                className={`floatRight pointer`} \n                icon={faWrench} onClick={this.toggleMovesSettings.bind(this)}/>\n                <MovesSettings isOpen={this.state.moveSettingsOpen} \n                    toggle={this.toggleMovesSettings.bind(this)}\n                    settingsChange={this.props.settingsChange}\n                    updateSettings = {this.props.updateSettings}\n                    settings={this.props.settings}\n                    variant={this.props.variant}/>\n            </TableCell>\n        </TableRow></TableHead>\n        :null}\n        {hasMoves?\n        <TableBody>\n        {\n        this.props.movesToShow.map((move, moveIndex) => {\n            let lastPlayedGame = move.details.lastPlayedGame\n            return lastPlayedGame && move.moveCount === 1?\n                this.getSingleItemRow(move,lastPlayedGame):\n                this.getMultiItemRow(move, moveIndex)\n                \n            }\n        )}\n    </TableBody>\n    :null}\n        <TableFooter><TableRow>\n            <TableCell colSpan=\"3\">\n                {this.props.tableFooter}\n            </TableCell>\n        </TableRow></TableFooter>\n    </Table>\n    }\n    highlightArrowFn(move) {\n        return ()=>{\n            this.props.highlightArrow(move)\n        }\n    }\n    getMultiItemRow(move, moveIndex) {\n        return <TableRow className={`${this.props.highlightMove === move.san?'bgColor ':''}moveRow`} \n                        key = {`m${move.orig}${move.dest}${move.san}`} \n                        onClick={this.move(move.san)} \n                        onMouseOver={this.highlightArrowFn(move).bind(this)} \n                        onMouseOut={()=>this.props.highlightArrow(null)}>\n            <TableCell size=\"small\" className=\"smallCol\">{move.san} </TableCell>\n            <TableCell size=\"small\" id={`p${this.props.namespace}${moveIndex}`} className=\"smallCol\" onClick ={this.togglePerformancePopover(moveIndex)}>\n                {simplifyCount(move.moveCount)}{this.getInfoIcon(moveIndex)}\n                {this.getPopover(moveIndex)}\n            </TableCell>\n            <TableCell>\n                <Container>\n                {this.props.settings.movesSettings.openingBookScoreIndicator?\n                <Row className=\"scoresProgress\"><Col className=\"navCol\">\n                {this.compareScores(move)}\n                </Col></Row>:null}\n                <Row><Col className=\"navCol\">\n                <Progress className = \"border\" multi>\n                    <Progress bar className=\"whiteMove\" value={`${this.percentage(move.details.whiteWins,move.details.count)}`}>{this.getProgressLabel(move.details.whiteWins,move.details.count)}</Progress>\n                    <Progress bar className=\"grayMove\" value={`${this.percentage(move.details.draws,move.details.count)}`}>{this.getProgressLabel(move.details.draws,move.details.count)}</Progress>\n                    <Progress bar className=\"blackMove\" value={`${this.percentage(move.details.blackWins,move.details.count)}`}>{this.getProgressLabel(move.details.blackWins,move.details.count)}</Progress>\n                </Progress></Col></Row>\n                {this.props.settings.movesSettings.openingBookWinsIndicator?\n                <Row className=\"zeroHeight\"><Col className=\"navCol\">\n                {this.compareProgress(move)}\n                </Col></Row>:null}\n                </Container>\n            </TableCell>\n        </TableRow>\n    }\n\n    getInfoIcon(moveIndex) {\n        if(this.getTranspositionWarningLevel(moveIndex) === \"warning\"){\n            return <FontAwesomeIcon \n                className={`leftPadding redColor lowOpacity`} \n                icon={faExclamationTriangle}/>\n        }\n        return <FontAwesomeIcon \n            className={`lowOpacity leftPadding`} \n            icon={faInfoCircle}/>\n\n    }\n\n    getProgressLabel(count, total){\n        let percentage = this.percentage(count,total)\n        if(percentage<10) {\n            return ''\n        }\n        if(this.props.showAsPercentage) {\n            return `${percentage.toFixed(1)}%`\n        }\n        return count\n\n    }\n\n    percentage(count, total){\n        return count/total*100\n    }\n    getSingleItemRow(move,lastPlayedGame) {\n        let sampleResultWhite = playerDetails(lastPlayedGame.white, lastPlayedGame.whiteElo)\n        let sampleResultBlack = playerDetails(lastPlayedGame.black, lastPlayedGame.blackElo)\n        let sampleResult = lastPlayedGame.result\n\n        return <TableRow className={`${this.props.highlightMove === move.san?'bgColor ':''}moveRow`} \n                key = {`${move.orig}${move.dest}`} \n                onClick={this.move(move.san)}\n                onMouseOver={this.highlightArrowFn(move).bind(this)} \n                onMouseOut={()=>this.props.highlightArrow(null)}>\n                <TableCell size=\"small\" className=\"smallCol\">{move.san}</TableCell>\n                <TableCell colSpan = \"2\">\n                        {sampleResultWhite} {sampleResult} {sampleResultBlack} {<FontAwesomeIcon className=\"pointerExternalLink\" onClick ={this.props.launchGame(move.details.lastPlayedGame)} icon={faExternalLinkAlt}/>}\n                </TableCell>\n            </TableRow>\n    }\n\n}\n","import React from 'react'\nimport { Table, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport {playerDetails} from './MovesCommon'\n\nexport default class ResultsTable extends React.Component {\n    render() {\n        return <Table>\n            <TableBody>\n                {\n                this.props.gameResults.map(result => {\n                    let whitePlayer = playerDetails(result.white, result.whiteElo)\n                    let blackPlayer = playerDetails(result.black, result.blackElo)\n                    return <TableRow className=\"moveRow\" key = {`${result.url}`} onClick={this.props.launchGame(result)}>\n                        <TableCell>\n                            {result.result===\"1-0\"?<b>{whitePlayer}</b>:whitePlayer} {result.result} {result.result === \"0-1\"?<b>{blackPlayer}</b>:blackPlayer}\n                        </TableCell>\n                    </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport MovesTable from './MovesTable'\nimport ResultsTable from './ResultsTable';\n\nexport default class MovesList extends React.Component {\n\n    render(){\n        if(!this.props.playerMoves) {\n            return <div className = \"infoMessage\" >No moves to show. Please select a source from the \n                <span className = \"navLinkButton\" onClick={()=>this.props.switchToUserTab()}> <FontAwesomeIcon icon={faUser} /> User</span> tab and enter the details.</div>\n        }\n        return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n\n    movesTable() {\n        return <MovesTable movesToShow={this.props.playerMoves} namespace='moves'\n                launchGame={this.props.launchGame} settings={this.props.settings}\n                turnColor={this.props.turnColor} onMove={this.props.onMove}\n                clickedEventName=\"MoveClicked\" tableFooter={this.tableFooter()}\n                highlightMove={this.props.highlightMove} \n                compareToClicked={this.props.switchToBookTab}\n                compareToAlt=\"Indicator for book moves - Click me\"\n                settingsChange={this.props.settingsChange}\n                variant={this.props.variant}\n                highlightArrow={this.props.highlightArrow}\n                />\n    }\n    resultsTable() {\n        return <ResultsTable gameResults={this.props.gameResults}\n                launchGame={this.props.launchGame}/>\n    }\n\n    tableFooter() {\n        let hasMoves = (this.props.playerMoves && this.props.playerMoves.length>0)\n        if(this.props.settings.playerName) {\n            if(hasMoves) {\n                return <span>\n                    Showing moves that have been  played {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                    this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.\n                    </span>\n            } else {\n                return <span>No moves found played by {this.props.turnColor === this.props.settings.playerColor? \"by\" : \"by others against\"} <b>{this.props.settings.playerName}</b> in \n                    this position. <b>{this.props.settings.playerName}</b> is playing as <b>{this.props.settings.playerColor}</b>.</span>\n            }\n        } else {\n            if(hasMoves) {\n                return <span>\n                    Showing all moves that have been played by <b>{this.props.turnColor}</b> in this position.\n                    </span>\n            } else {\n                return <span>\n                    No moves found played by <b>{this.props.turnColor}</b> in this position.\n                    </span>\n            }\n        }\n    }\n\n}","import React from 'react'\nimport MovesTable from './MovesTable'\nimport ResultsTable from './ResultsTable';\nimport { Spinner } from 'reactstrap';\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle} from '@fortawesome/free-solid-svg-icons'\nimport { Button as MaterialUIButton } from '@material-ui/core'\nimport Cached from '@material-ui/icons/Cached'\nimport * as Constants from '../../app/Constants'\n\nexport default class BookMove extends React.Component {\n\n    render(){\n        if(!this.props.bookMoves) {\n            return <div className = \"infoMessage\" >No book moves found in this position</div>\n        }\n        return <div>{(this.props.gameResults && this.props.gameResults.length>0)?this.resultsTable():null}\n                {this.movesTable()}</div>\n    }\n\n    enableBook(){\n        let newMovesSettings = Object.assign({},this.props.settings.movesSettings)\n        newMovesSettings.openingBookType = Constants.OPENING_BOOK_TYPE_LICHESS\n        this.props.settingsChange('movesSettings', newMovesSettings)\n    }\n\n    movesTable() {\n        if(this.props.bookMoves.fetch === \"pending\") {\n            return <div className=\"center\"><br/><Spinner/></div>\n        }\n        if(this.props.bookMoves.fetch === \"off\") {\n            return this.offCard('Opening book is disabled',\n            'Click the button below to enable it',\n            this.enableBook.bind(this),'Enable opening book', <Cached />)\n        }\n\n        if(this.props.bookMoves.fetch === \"failed\") {\n            return this.offCard('Failed to fetch book moves',\n            'Please check your internet connection. Lichess could also be down.',\n            this.props.forceFetchBookMoves,'Try again', <Cached />)\n        }\n\n        return <MovesTable movesToShow={this.props.bookMoves.moves} namespace='book'\n                launchGame={this.props.launchGame} settings={this.props.settings}\n                turnColor={this.props.turnColor} onMove={this.props.onMove}\n                clickedEventName=\"BookMoveClicked\" showAsPercentage\n                highlightMove={this.props.highlightMove} \n                compareToClicked={this.props.switchToMovesTab}\n                compareToAlt=\"Indicator for player moves - Click me\"\n                settingsChange={this.props.settingsChange}\n                variant={this.props.variant}\n                highlightArrow={this.props.highlightArrow}\n                />\n    }\n\n    offCard(title, message, action, actionText, actionIcon) {\n        return <Card className=\"errorCard\"><CardBody className=\"singlePadding\">\n        <CardTitle className=\"smallBottomMargin\"><FontAwesomeIcon icon={faInfoCircle} className=\"lowOpacity\"/> {title}</CardTitle>\n        <CardText className=\"smallText\">\n            {message}\n            <br/>\n            <br/><MaterialUIButton\n            onClick={action}\n            variant=\"contained\"\n            color=\"default\"\n            className=\"mainButton\" disableElevation\n            startIcon={actionIcon}\n            >\n                {actionText}\n            </MaterialUIButton>\n        </CardText>\n        </CardBody>\n        </Card>\n    }\n    resultsTable() {\n        return <ResultsTable gameResults={this.props.gameResults}\n                launchGame={this.props.launchGame}/>\n    }\n}","import React from 'react'\nimport PGNLoader from './loader/PGNLoader'\nimport SettingsView from './Settings'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col,Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faList, faCog, faChartBar, faBook } from '@fortawesome/free-solid-svg-icons'\nimport MovesList from './moves/MovesList'\nimport BookMoves from './moves/BookMoves'\nimport {trackEvent} from '../app/Analytics'\nimport * as Constants from '../app/Constants'\nimport ReportControls from './ReportControls'\nimport {Modal, ModalHeader, ModalFooter} from 'reactstrap'\nimport {Table, TableRow, TableBody, TableCell} from '@material-ui/core'\n\nexport default class ControlsContainer extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n          activeTab:'user',\n          activeGame:null\n      }\n      this.toggleModal = ()=>{\n        this.setState({activeGame:null})\n      }\n    }\n    \n\n    launchGame(game) {\n      if(game.url) {\n          return (e) => {\n              e.stopPropagation()\n              window.open(game.url, '_blank');\n              trackEvent(Constants.EVENT_CATEGORY_MOVES_LIST, \"ViewGameExternal\")\n          }\n      }\n      return ((e) => {\n        e.stopPropagation()\n        this.setState({activeGame:game})\n      })\n    }\n\n    toggle(tab) {\n        if(this.state.activeTab !== tab) {\n            this.setState({activeTab:tab})\n            trackEvent(Constants.EVENT_CATEGORY_CONTROLS,`activeTab:${tab}`)\n        }\n    }\n    switchToUserTab() {\n      this.toggle('user')\n    }\n    switchToMovesTab(highlightMove) {\n      this.toggle('moves')\n      if(highlightMove) {\n        this.setState({highlightPlayerMove:highlightMove})\n        setTimeout(() => {\n          this.setState({\n            highlightPlayerMove:null\n          })\n        }, 1000);\n      }\n    }\n    switchToBookTab(highlightMove) {\n      this.toggle('book')\n      if(highlightMove) {\n        this.setState({highlightBookMove:highlightMove})\n        setTimeout(() => {\n          this.setState({\n            highlightBookMove:null\n          })\n        }, 1000);\n      }\n    }\n\n    render(){\n        return <div>\n              <Modal isOpen={this.state.activeGame} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Game details</ModalHeader>\n              {!this.state.activeGame?null:\n              <Table>\n                \n                <TableBody>\n                  {\n                    Object.entries(this.state.activeGame.headers).map((entry)=>!entry[1]?null:<TableRow className=\"performanceRatingRow\">\n                        <TableCell className=\"performanceRatingRow\">{entry[0]}</TableCell>\n                        <TableCell className=\"performanceRatingRow\">{entry[1]}</TableCell>\n                    </TableRow>\n                    )}\n                  \n                </TableBody>\n              </Table>\n              }\n              <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleModal}>Done</Button>\n        </ModalFooter>\n              </Modal>\n            <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'user' })}\n            onClick={() => { this.toggle('user'); }}\n          >\n            <FontAwesomeIcon icon={faUser} /> {this.state.activeTab === 'user'?\"User\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'moves' })}\n            onClick={() => { this.toggle('moves'); }}\n          >\n            <FontAwesomeIcon icon={faList} /> {this.state.activeTab === 'moves'?\"Moves\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'book' })}\n            onClick={() => { this.toggle('book'); }}\n          >\n            <FontAwesomeIcon icon={faBook} /> {this.state.activeTab === 'book'?\"Opening book\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'report' })}\n            onClick={() => { this.toggle('report'); }}\n          >\n            <FontAwesomeIcon icon={faChartBar} /> {this.state.activeTab === 'report'?\"Report\":\"\"}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === 'settings' })}\n            onClick={() => { this.toggle('settings'); }}\n          >\n            <FontAwesomeIcon icon={faCog} /> {this.state.activeTab === 'settings'?\"Controls\":\"\"}\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={this.state.activeTab}>\n        <TabPane tabId=\"user\">\n            <PGNLoader \n              switchToMovesTab={this.switchToMovesTab.bind(this)} \n              clear = {this.props.clear} \n              gamesProcessed = {this.props.gamesProcessed} \n              settings = {this.props.settings} \n              onChange = {this.props.settingsChange} \n              notify = {this.props.updateProcessedGames}\n              showError = {this.props.showError}\n              showInfo = {this.props.showInfo}\n              setDownloading = {this.props.setDownloading}\n              isDownloading = {this.props.isDownloading}\n              openingGraph={this.props.openingGraph}\n              importCallback={this.props.importCallback}\n              variant={this.props.variant}\n              variantChange={this.props.variantChange}\n              />\n            </TabPane>\n        <TabPane tabId=\"moves\">\n            <MovesList \n              switchToUserTab={this.switchToUserTab.bind(this)} \n              playerMoves={this.props.playerMoves} \n              gameResults={this.props.gameResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              switchToBookTab={this.switchToBookTab.bind(this)}\n              highlightMove={this.state.highlightPlayerMove}\n              variant={this.props.variant}\n              highlightArrow={this.props.highlightArrow}\n            />\n        </TabPane>\n        <TabPane tabId=\"book\">\n            <BookMoves \n              bookMoves={this.props.bookMoves} \n              gameResults={this.props.bookResults}\n              onMove={this.props.onMove}\n              settings={this.props.settings}\n              turnColor={this.props.turnColor}\n              settingsChange={this.props.settingsChange}\n              launchGame = {this.launchGame.bind(this)}\n              switchToMovesTab = {this.switchToMovesTab.bind(this)}\n              highlightMove = {this.state.highlightBookMove}\n              forceFetchBookMoves = {this.props.forceFetchBookMoves}\n              variant={this.props.variant}\n              highlightArrow={this.props.highlightArrow}\n              />\n        </TabPane>\n        <TabPane tabId=\"report\">\n          <ReportControls fen={this.props.fen} simplifiedView = {false}\n            moveDetails = {this.props.openingGraph.getDetailsForFen(this.props.fen)}\n            launchGame={this.launchGame.bind(this)} settings={this.props.settings}\n            switchToUserTab={this.switchToUserTab.bind(this)} \n            isOpen = {this.state.activeTab === \"report\"}\n            showInfo = {this.props.showInfo} reportFooter={this.reportFooter()}/>\n        </TabPane>\n        <TabPane tabId=\"settings\">\n          <Row>\n            <Col sm=\"6\">\n            <SettingsView fen={this.props.fen} settings={this.props.settings} isOpen = {true} clear = {this.props.clear} reset = {this.props.reset} onChange = {this.props.settingsChange}/>\n            \n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n        </div>\n    }\n\n    reportFooter(){\n      return <span>Calculated based on <a href=\"https://handbook.fide.com/chapter/B022017\" target=\"_blank\" rel=\"noopener noreferrer\">FIDE regulations</a></span>\n    }\n}","import green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, subMessage, action, actionText, showReportButton, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <div><span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message} \n                    \n                </span>\n                {!subMessage?null:<div className=\"smallText\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{subMessage}</div>}\n                </div>\n            }\n            action={[ \n                !showReportButton?null:<Button key=\"report\" onClick = {action} color=\"inherit\" size=\"small\">\n                  {actionText}\n                </Button>,\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    onReport: PropTypes.func,\n    subMessage: PropTypes.string,\n    showReportButton: PropTypes.bool,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);","import React from 'react'\nimport Chessground from 'react-chessground'\nimport 'react-chessground/dist/styles/chessground.css'\nimport OpeningGraph from '../app/OpeningGraph'\nimport Navigator from './Navigator'\nimport GlobalHeader from './GlobalHeader'\nimport {Container, Row, Col} from 'reactstrap'\nimport ControlsContainer from './ControlsContainer'\nimport {addStateManagement} from './StateManagement'\nimport {Snackbar, TextField} from '@material-ui/core'\nimport SnackbarContentWrapper from './SnackbarContentWrapper'\nimport * as Constants from '../app/Constants'\nimport {  Modal, ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,Collapse\n} from 'reactstrap'\nimport {chessLogic} from '../app/chess/ChessLogic'\n\nimport {FormControlLabel, Checkbox} from '@material-ui/core'\nimport cookieManager from '../app/CookieManager'\n\nexport default class MainContainer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    let urlVariant = new URLSearchParams(window.location.search).get(\"variant\")\n    let selectedVariant = urlVariant?urlVariant:Constants.VARIANT_STANDARD\n    this.chess = chessLogic(selectedVariant)\n    addStateManagement(this)\n    this.state = {\n        resize:0,\n        fen: this.chess.fen(),\n        lastMove: null,\n        gamesProcessed:0,\n        openingGraph:new OpeningGraph(selectedVariant),\n        settings:{\n          playerName:'',\n          orientation:Constants.PLAYER_COLOR_WHITE,\n          playerColor:'',\n          movesSettings:this.getMovesSettingsFromCookie()\n        },\n        message:'',\n        downloadingGames:false,\n        feedbackOpen:false,\n        diagnosticsDataOpen:false,\n        variant:selectedVariant,\n        update:0,//increase count to force update the component\n        highlightedMove:null\n      }\n    this.chessboardWidth = this.getChessboardWidth()\n\n    this.forBrushes = ['blue','paleGrey', 'paleGreen', 'green']\n    this.againstBrushes = ['blue','paleRed', 'paleRed', 'red']\n    window.addEventListener('resize', this.handleResize.bind(this))\n  }\n  handleResize() {\n    this.setState({resize:this.state.resize+1})\n    this.chessboardWidth = this.getChessboardWidth()\n  }\n\n\n  getMovesSettingsFromCookie(){\n    let settings = cookieManager.getSettingsCookie()\n    if(!settings) {\n      // default settings\n      return {\n        openingBookType:Constants.OPENING_BOOK_TYPE_LICHESS,\n        openingBookRating:Constants.ALL_BOOK_RATINGS,\n        openingBookTimeControls:[Constants.TIME_CONTROL_BULLET,\n                                Constants.TIME_CONTROL_BLITZ,\n                                Constants.TIME_CONTROL_RAPID,\n                                Constants.TIME_CONTROL_CLASSICAL],\n        openingBookScoreIndicator:false,\n        openingBookWinsIndicator:true\n      }\n    }\n    return settings.movesSettings\n  }\n\n\n\n  render() {\n    let lastMoveArray = this.state.lastMove ? [this.state.lastMove.from, this.state.lastMove.to] : null\n    let snackBarOpen = this.state.message?true:false\n    let playerMoves = this.getPlayerMoves()\n    let bookMoves = this.getBookMoves()\n    this.mergePlayerAndBookMoves(playerMoves, bookMoves)\n    return <div className=\"rootView\"> \n        <GlobalHeader toggleFeedback = {this.toggleFeedback(false)}/>\n        <Container className=\"mainContainer\">\n          <Row><Col lg={{order:0, size:2}} xs={{order:2}}>\n            <Navigator fen = {this.state.fen} move={this.state.lastMove} \n              onChange ={this.navigateTo.bind(this)}\n              variant = {this.state.variant}\n            />\n    </Col><Col lg=\"6\"><Chessground key={this.state.resize}\n      height={this.chessboardWidth}\n      width={this.chessboardWidth}\n      orientation={this.orientation()}\n      turnColor={this.turnColor()}\n      movable={this.calcMovable()}\n      lastMove={lastMoveArray}\n      fen={this.state.fen}\n      onMove={this.onMoveAction.bind(this)}\n      drawable ={{\n        enabled: true,\n        visible: true,\n        autoShapes: this.autoShapes(playerMoves, this.state.highlightedMove)\n      }}\n      style={{ margin: 'auto' }}\n    />\n    </Col><Col lg=\"4\" className=\"paddingTop\"><ControlsContainer fen={this.state.fen}\n                gamesProcessed={this.state.gamesProcessed} \n                updateProcessedGames={this.updateProcessedGames.bind(this)}\n                settingsChange={this.settingsChange.bind(this)}\n                settings={this.state.settings}\n                reset={this.reset.bind(this)}\n                clear={this.clear.bind(this)}\n                playerMoves={playerMoves}\n                bookMoves={bookMoves}\n                gameResults={this.gameResults()}\n                onMove={this.onMove.bind(this)}\n                turnColor={this.turnColor()}\n                showError={this.showError.bind(this)}\n                showInfo={this.showInfo.bind(this)}\n                setDownloading={this.setDownloading.bind(this)}\n                isDownloading={this.state.downloadingGames}\n                openingGraph={this.state.openingGraph}\n                importCallback={this.importGameState.bind(this)}\n                variant={this.state.variant}\n                variantChange={this.variantChange.bind(this)}\n                forceFetchBookMoves={this.forceFetchBookMoves.bind(this)}\n                highlightArrow={this.highlightArrow.bind(this)}\n                /></Col>\n    </Row></Container>\n    <Snackbar anchorOrigin={{ vertical:'bottom', horizontal:\"left\" }} \n            open={snackBarOpen} autoHideDuration={6000} \n            onClose={this.closeError.bind(this)}\n    >\n    <SnackbarContentWrapper\n                            onClose={this.closeError.bind(this)}\n                            variant={this.state.messageSeverity}\n                            message={this.state.message}\n                            subMessage={this.state.subMessage}\n                            showReportButton={this.state.messageSeverity==='error'}\n                            action={this.state.errorAction}\n                            actionText={this.state.errorActionText}\n                        />\n    </Snackbar>\n\n    <Modal isOpen={this.state.feedbackOpen} toggle={this.toggleFeedback(false)}>\n        <ModalHeader toggle={this.toggleFeedback(false)}>Feedback</ModalHeader>\n        <ModalBody>\n          Your feedback is greatly appreciated. Reach out to me for feedback, suggestions, bug report or just a game of chess.\n          <ul>\n            <li>Email me: <a rel=\"noopener noreferrer\" href={this.getEmailLink()} target=\"_blank\">{Constants.OPENING_TREE_EMAIL}</a></li>\n            <li>Message me on reddit <a rel=\"noopener noreferrer\" href={this.getRedditLink()} target=\"_blank\">u/{Constants.OPENNIG_TREE_REDDIT}</a></li>\n            <li>Message me on lichess: <a rel=\"noopener noreferrer\" href={`https://lichess.org/inbox/${Constants.OPENING_TREE_LICHESS}`} target=\"_blank\">{Constants.OPENING_TREE_LICHESS}</a></li>\n            <li>Message me on chess.com: <a rel=\"noopener noreferrer\" href={`https://www.chess.com/messages/compose/${Constants.OPENING_TREE_CHESS_COM}`} target=\"_blank\">{Constants.OPENING_TREE_CHESS_COM}</a></li>\n            <li>Join my <a rel=\"noopener noreferrer\" href={Constants.OPENING_TREE_DISCORD}target=\"_blank\">discord server</a> to chat</li>\n          </ul>\n          <FormControlLabel\n        control={\n          <Checkbox\n            checked={this.state.diagnosticsDataOpen}\n            onChange={this.toggleDiagnosticsData}\n            name=\"diagnostics\"\n            color=\"primary\"\n          />\n        }\n        label=\"Add diagnostics data to message\"\n      />\n          <Collapse isOpen={this.state.diagnosticsDataOpen}>\n            <TextField id=\"diagnosticsText\" label=\"Click to copy.\" variant=\"outlined\" \n            className=\"fullWidth\" value={this.getDiagnosticsValue()} \n            rowsMax={4} onClick={this.copyDiagnostics} multiline/>\n            </Collapse>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggleFeedback(false)}>Done</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  }\n}\n","import ReactDOM from 'react-dom'\nimport MainContainer from './pres/MainContainer'\nimport React from 'react'\nimport {trackPageView} from './app/Analytics'\n\nReactDOM.render(<MainContainer />, document.getElementById('root'))\ntrackPageView()","import Cookies from 'js-cookie'\n\nclass CookieManager {\n    getLichessAccessToken() {\n        return Cookies.get('at')\n    }\n    deleteLichessAccessToken() {\n        Cookies.remove('at', { path: '/', domain:'www.openingtree.com' })\n    }\n    setSettingsCookie(settings) {\n        Cookies.set('set',JSON.stringify(settings))\n    }\n    getSettingsCookie() {\n        let settingsCookie = null\n        try{\n            settingsCookie = Cookies.get('set')\n        } catch (e) {\n            console.log(e)\n            return null\n        }\n        if(!settingsCookie) {\n            return null\n        }\n        return JSON.parse(settingsCookie)\n    }\n}\n\nexport default new CookieManager();","import * as Constants from './Constants'\n\nexport function isAdvancedFiltersEnabled(source) {\n    return source === Constants.SITE_CHESS_DOT_COM ||\n        source === Constants.SITE_LICHESS\n}\n\n\nexport function isFilterPanelEnabled(source, playerName) {\n    if(source === Constants.SITE_EVENT_DB ||\n        source === Constants.SITE_OPENING_TREE_FILE ||\n        source === Constants.SITE_ONLINE_TOURNAMENTS) {\n            return false\n    }\n    return !!playerName\n}\n\nexport function treeSaveDisabledReason(loadedSite, selectedSite, gamesProcessed, isDownloading){\n    if(selectedSite === Constants.SITE_ONLINE_TOURNAMENTS) {\n        return \"Not currently supported for tournaments\"\n    }\n    if(selectedSite !== Constants.SITE_LICHESS && \n        selectedSite !== Constants.SITE_CHESS_DOT_COM) {\n        return \"Only supported for chess.com and lichess\"\n    }\n    if(loadedSite !== selectedSite || gamesProcessed<=0) {\n        return \"You need to analyze games before saving\"\n    }\n    if(isDownloading) {\n        return \"Action not supported while games are loading\"\n    }\n    return ''\n}\nexport function exportFileName(source, playerName, playerColor, selectedEvent, extension) {\n    if(source === Constants.SITE_EVENT_DB) {\n        return `${selectedEvent.name}.${extension}`\n    }\n    if(playerName) {\n        return `${playerName}-${playerColor}.${extension}`\n    }\n    return `openingtree-exportedgames.${extension}`\n}"],"sourceRoot":""}